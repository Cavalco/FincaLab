/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formas_Reportes;

import Idioma.Propiedades;
import Metodos_Configuraciones.metodosDatosBasicos;
import com.placeholder.PlaceHolder;
import java.sql.Connection;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.prompt.PromptSupport;

/**
 *
 * @author Carlos Valdez
 */
public class jpPadronParcelario extends javax.swing.JPanel {

    /**
     * Creates new form jpPadronParcelario
     */
    Connection cn;
    metodosDatosBasicos mdb;
    DefaultTableModel modelo;
    String Idioma, where = "";
    Propiedades idioma;

    public jpPadronParcelario(Connection cn, String Idioma) {
        initComponents();

        this.cn = cn;
        mdb = new metodosDatosBasicos(cn, Idioma);
        modelo = (DefaultTableModel) tablaInformacion.getModel();
        idioma = new Propiedades(Idioma);

        llenarTabla();
        traductor();
        llenarCombos();
    }

    public void traductor() {
        PromptSupport.setPrompt(idioma.getProperty("Nombre"), txtNombre);
        PromptSupport.setPrompt(idioma.getProperty("ApellidoPaterno"), txtApePat);
        PromptSupport.setPrompt(idioma.getProperty("ApellidoMaterno"), txtApMat);
    }

    public void llenarTabla() {
        limpiar(tablaInformacion);
        mdb.cargarInformacion2(modelo, 12,
                "SELECT\n"
                + "    pm.NombreCorto,\n"
                + "    cc.nombre,\n"
                + "    pr.clave_productor,\n"
                + "    pf.ApellidoPaterno,\n"
                + "    pf.ApellidoMaterno,\n"
                + "    pf.Nombre,\n"
                + "    e.descripcion,\n"
                + "    l.Descripcion,\n"
                + "    pa.clave_parcela,\n"
                + "    pa.altura,\n"
                + "    pa.area,\n"
                + "    pa.numCafetos\n"
                + "FROM\n"
                + "    productor pr\n"
                + "LEFT JOIN personaf pf ON\n"
                + "    (pf.ID = pr.id_persona)\n"
                + "LEFT JOIN localidad l ON\n"
                + "    (l.ID = pf.ID_Localidad)\n"
                + "LEFT JOIN estado e ON\n"
                + "    (e.Descripcion = pf.ID_Estado)\n"
                + "LEFT JOIN parcelas pa ON\n"
                + "    (pa.id_persona = pr.id_persona)\n"
                + "LEFT JOIN sociedadespersona s ON\n"
                + "    (s.id_persona = pf.ID)\n"
                + "LEFT JOIN personam pm ON\n"
                + "    (s.id_asociado = pm.ID)\n"
                + "LEFT JOIN codigos_certificacion cc ON\n"
                + "    (pa.clave_certificacion = cc.codigo)\n"
                + " WHERE pr.id_situacion=1 " + where);
        where = "";
    }

    public void llenarCombos() {
        String[] datos = mdb.cargarCombos("select nombrecorto from personam").split("¬");
        comboSociedades.setModel(new DefaultComboBoxModel((Object[]) datos));

        datos = mdb.cargarCombos("select nombre from codigos_certificacion").split("¬");
        comboCertificados.setModel(new DefaultComboBoxModel((Object[]) datos));
    }

    private void limpiar(JTable tabla) {
        while (tabla.getRowCount() > 0) {
            ((DefaultTableModel) tabla.getModel()).removeRow(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtApePat = new javax.swing.JTextField();
        comboSociedades = new javax.swing.JComboBox<>();
        comboCertificados = new javax.swing.JComboBox<>();
        txtApMat = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaInformacion = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtros"));

        txtApePat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApePatKeyReleased(evt);
            }
        });

        comboSociedades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboSociedades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSociedadesActionPerformed(evt);
            }
        });

        comboCertificados.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboCertificados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCertificadosActionPerformed(evt);
            }
        });

        txtApMat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApMatKeyReleased(evt);
            }
        });

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboSociedades, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboCertificados, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtApePat, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtApMat, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtApePat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(comboSociedades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(comboCertificados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(txtApMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tablaInformacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Sociedad", "Certificacion", "Clave Productor", "Apellido Paterno", "Apellido Materno", "Nombre", "Estado", "Localidad", "Codigo Parcela", "Altura Promedio", "Area", "Numero Cafetos"
            }
        ));
        jScrollPane1.setViewportView(tablaInformacion);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Exportar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtApePatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApePatKeyReleased
        // TODO add your handling code here:
        if (comboSociedades.getSelectedItem().equals("Seleccione") && comboCertificados.getSelectedItem().equals("Seleccione")) {
            where += " and pf.ApellidoPaterno like '" + txtApePat.getText() + "%'";
        } else if (!comboSociedades.getSelectedItem().equals("Seleccione")) {
            where += " and pf.ApellidoPaterno like '" + txtApePat.getText() + "%' and pm.nombrecorto='" + comboSociedades.getSelectedItem() + "' ";
        } else if (!comboSociedades.getSelectedItem().equals("Seleccione") && !comboCertificados.getSelectedItem().equals("Seleccione")) {
            where += " and pf.ApellidoPaterno like '" + txtApePat.getText() + "%' and cc.nombre='" + comboCertificados.getSelectedItem() + "' and pm.nombrecorto='" + comboSociedades.getSelectedItem() + "' ";
        } else {
            where += " and pf.ApellidoPaterno like '" + txtApePat.getText() + "%' and cc.nombre='" + comboCertificados.getSelectedItem() + "' ";
        }
        llenarTabla();
    }//GEN-LAST:event_txtApePatKeyReleased

    private void txtApMatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApMatKeyReleased
        // TODO add your handling code here:
        if (comboSociedades.getSelectedItem().equals("Seleccione") && comboCertificados.getSelectedItem().equals("Seleccione")) {
            where += " and pf.ApellidoMaterno like '" + txtApMat.getText() + "%'";
        } else if (!comboSociedades.getSelectedItem().equals("Seleccione")) {
            where += " and pf.ApellidoMaterno like '" + txtApMat.getText() + "%' and pm.nombrecorto='" + comboSociedades.getSelectedItem() + "' ";
        } else if (!comboSociedades.getSelectedItem().equals("Seleccione") && !comboCertificados.getSelectedItem().equals("Seleccione")) {
            where += " and pf.ApellidoMaterno like '" + txtApMat.getText() + "%' and cc.nombre='" + comboCertificados.getSelectedItem() + "' and pm.nombrecorto='" + comboSociedades.getSelectedItem() + "' ";
        } else {
            where += " and pf.ApellidoMaterno like '" + txtApMat.getText() + "%' and cc.nombre='" + comboCertificados.getSelectedItem() + "' ";
        }
        llenarTabla();
    }//GEN-LAST:event_txtApMatKeyReleased

    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
        // TODO add your handling code here:
        if (comboSociedades.getSelectedItem().equals("Seleccione") && comboCertificados.getSelectedItem().equals("Seleccione")) {
            where += " and pf.nombre like '" + txtNombre.getText() + "%'";
        } else if (!comboSociedades.getSelectedItem().equals("Seleccione")) {
            where += " and pf.nombre like '" + txtNombre.getText() + "%' and pm.nombrecorto='" + comboSociedades.getSelectedItem() + "' ";
        } else if (!comboSociedades.getSelectedItem().equals("Seleccione") && !comboCertificados.getSelectedItem().equals("Seleccione")) {
            where += " and pf.nombre like '" + txtNombre.getText() + "%' and cc.nombre='" + comboCertificados.getSelectedItem() + "' and pm.nombrecorto='" + comboSociedades.getSelectedItem() + "' ";
        } else {
            where += " and pf.nombre like '" + txtNombre.getText() + "%' and cc.nombre='" + comboCertificados.getSelectedItem() + "' ";
        }

        llenarTabla();
    }//GEN-LAST:event_txtNombreKeyReleased

    private void comboSociedadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSociedadesActionPerformed
        // TODO add your handling code here:
        if (comboCertificados.getSelectedItem().equals("Seleccione")) {
            where += " and pm.nombrecorto = '" + comboSociedades.getSelectedItem() + "'";
        } else {
            where += " and cc.nombre='" + comboCertificados.getSelectedItem() + "' and pm.nombrecorto = '" + comboSociedades.getSelectedItem() + "'";
        }

        where += " and pm.nombrecorto = '" + comboSociedades.getSelectedItem() + "'";
        llenarTabla();
    }//GEN-LAST:event_comboSociedadesActionPerformed

    private void comboCertificadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCertificadosActionPerformed
        // TODO add your handling code here:
        if (comboSociedades.getSelectedItem().equals("Seleccione")) {
            where += " and cc.nombre='" + comboCertificados.getSelectedItem() + "'";
        } else {
            where += " and cc.nombre='" + comboCertificados.getSelectedItem() + "' and pm.nombrecorto = '" + comboSociedades.getSelectedItem() + "'";
        }

        llenarTabla();
    }//GEN-LAST:event_comboCertificadosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboCertificados;
    private javax.swing.JComboBox<String> comboSociedades;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaInformacion;
    private javax.swing.JTextField txtApMat;
    private javax.swing.JTextField txtApePat;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
