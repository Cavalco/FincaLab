/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formas_Configuraciones_FincaCert.Certificados;

import Metodos_Configuraciones.metodosDatosBasicos;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dell telmex
 */
public class CodComb extends javax.swing.JPanel {

    metodosDatosBasicos mdb;
    DefaultTableModel modelo, modelo2;
    Connection cn;

    /**
     * Creates new form CodComb
     */
    public CodComb(Connection c, String Idioma) {
        initComponents();
        cn = c;
        mdb = new metodosDatosBasicos(cn, Idioma);
        modelo = (DefaultTableModel) Tabla.getModel();
        activarB();
        llenarcombos();
        llenarTabla();
    }

    public void cargarCombo() {
        String[] datos = mdb.cargarCombos("SELECT descripcion from puestos").split("Â¬");
        comb1.setModel(new DefaultComboBoxModel((Object[]) datos));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comb1 = new javax.swing.JComboBox<>();
        comb2 = new javax.swing.JComboBox<>();
        comb3 = new javax.swing.JComboBox<>();
        add1 = new javax.swing.JCheckBox();
        add2 = new javax.swing.JCheckBox();
        comb4 = new javax.swing.JComboBox<>();
        comb5 = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        comboSituacion = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        codgen = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        comb1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Organico", "Item 2", "Item 3", "Item 4" }));

        comb2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MayaCert", "Item 2", "Item 3", "Item 4" }));

        comb3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nop", "Item 2", "Item 3", "Item 4" }));

        add1.setText("Agregar otro alcance?");
        add1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                add1ItemStateChanged(evt);
            }
        });
        add1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                add1KeyPressed(evt);
            }
        });

        add2.setText("Agregar otro alcance?");
        add2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                add2ItemStateChanged(evt);
            }
        });
        add2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add2ActionPerformed(evt);
            }
        });

        comb4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EU", "Item 2", "Item 3", "Item 4" }));

        comb5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USDA", "Item 2", "Item 3", "Item 4" }));
        comb5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comb5ActionPerformed(evt);
            }
        });

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Certificado", "Certificadora", "Alcance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla);
        if (Tabla.getColumnModel().getColumnCount() > 0) {
            Tabla.getColumnModel().getColumn(0).setResizable(false);
            Tabla.getColumnModel().getColumn(1).setResizable(false);
            Tabla.getColumnModel().getColumn(2).setResizable(false);
            Tabla.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel10.setText("Situacion");

        comboSituacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo", "Todos" }));
        comboSituacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboSituacionItemStateChanged(evt);
            }
        });

        jButton2.setText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Desactivar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Cerrar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboSituacion, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton4)
                    .addComponent(comboSituacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        jLabel2.setText("Certificado:");

        jLabel3.setText("Certificadora:");

        jLabel4.setText("Alcance:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(43, 43, 43)
                            .addComponent(codgen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(comb1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comb3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comb4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(add1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(comb5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(add2)))
                .addContainerGap(57, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(add1)
                    .addComponent(add2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comb3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comb4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comb5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(codgen, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                .addGap(8, 8, 8)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboSituacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboSituacionItemStateChanged
        if (comboSituacion.getSelectedItem().equals("Inactivo")) {
            estatus = "1";
            jButton4.setText("Activar");
        } else {
            jButton4.setText("Desactivar");
            estatus = "2";
        }  // TODO add your handling code here:
        // TODO add your handling code here:
        // busqueda();
        llenarTabla();
    }//GEN-LAST:event_comboSituacionItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        generarcodigo();

        /* TODO add your handling code here:
        jdDP = new jdDetallePersona1(null, true, "1", "", "", cn);
        jdDP.jpDP = this;
        jdDP.setVisible(true);**/
    }//GEN-LAST:event_jButton2ActionPerformed
    int v = 0, b, b2;

    public void generarcodigo() {
        String sql = "";

        sql = "select codigo from codigo_relacion order by codigo desc limit 1";

        if (mdb.comprobarExistencia("select codigo from codigo_relacion order by codigo desc limit 1") != null) {
            String sql1 = "";
            sql1 = "SELECT certificado,certificadora,alcance,codigo FROM codigo_relacion";
            String[] datos = new String[4];
            try {
                Statement st = cn.createStatement();
                ResultSet rs = st.executeQuery(sql1);
                while (rs.next()) {
                    datos[0] = rs.getString(1);
                    datos[1] = rs.getString(2);
                    datos[2] = rs.getString(3);
                    datos[3] = rs.getString(4);
                    if (datos[0].equals(comb1.getSelectedItem())) {
                        if (datos[1].equals(comb2.getSelectedItem())) {
                            if (datos[2].equals(comb3.getSelectedItem()) && add1.isSelected() == false && add2.isSelected() == false) {
                                v = 1;
                                String[] c1 = datos[3].split(",");
                                b = Integer.parseInt(c1[0]);
                                b2 = Integer.parseInt(c1[1]);
                                char digit1 = (char) b;
                                char digit2 = (char) b2;
                                JOptionPane.showMessageDialog(null, "La combinacion que intentas hacer ya existe con el codigo:" + digit1 + "" + digit2);
                                break;
                            }
                            if (datos[2].equals(comb3.getSelectedItem() + "," + comb4.getSelectedItem()) && add1.isSelected() == true && add2.isSelected() == false) {
                                v = 1;
                                String[] c1 = datos[3].split(",");
                                b = Integer.parseInt(c1[0]);
                                b2 = Integer.parseInt(c1[1]);
                                char digit1 = (char) b;
                                char digit2 = (char) b2;
                                JOptionPane.showMessageDialog(null, "La combinacion que intentas hacer ya existe con el codigo:" + digit1 + "" + digit2);
                                break;
                            }
                            if (datos[2].equals(comb3.getSelectedItem() + "," + comb4.getSelectedItem() + "," + comb5.getSelectedItem()) && add1.isSelected() == true && add2.isSelected() == true) {
                                v = 1;
                                String[] c1 = datos[3].split(",");
                                b = Integer.parseInt(c1[0]);
                                b2 = Integer.parseInt(c1[1]);
                                char digit1 = (char) b;
                                char digit2 = (char) b2;
                                JOptionPane.showMessageDialog(null, "La combinacion que intentas hacer ya existe con el codigo:" + digit1 + "" + digit2);
                                break;
                            }
                        }
                    }
                };

            } catch (SQLException ex) {
//            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (v == 0) {
                String co;
                co = mdb.comprobarExistencia(sql);
                String[] c1 = co.split(",");
                String codigo = "", alcance;
                b = Integer.parseInt(c1[0]);
                b2 = Integer.parseInt(c1[1]);
                char digit1 = (char) b;
                char digit2 = (char) b2;
                codgen.setText(digit1 + "" + digit2);
                //b2=b2+25;
                if (b2 == 90) {
                    b = b + 1;
                    b2 = 65;
                    alcance = comb3.getSelectedItem() + "";
                    if (add1.isSelected() == true) {
                        alcance = alcance + "," + comb4.getSelectedItem();
                    }
                    if (add2.isSelected() == true) {
                        alcance = alcance + "," + comb5.getSelectedItem();
                    }
                    codigo = String.valueOf(b) + "," + String.valueOf(b2);
                    sql = "INSERT INTO codigo_relacion VALUES(null,'" + codigo + "','" + comb1.getSelectedItem() + "','" + comb2.getSelectedItem() + "','" + alcance + "', '1', '1',current_date()"
                            + ", current_time(), 1, 1, '1', '1')";
                    mdb.insertarBasicos(sql);
                    llenarTabla();
                } else {

                    b2 = b2 + 1;

                    alcance = comb3.getSelectedItem() + "";
                    if (add1.isSelected() == true) {
                        alcance = alcance + "," + comb4.getSelectedItem();
                    }
                    if (add2.isSelected() == true) {
                        alcance = alcance + "," + comb5.getSelectedItem();
                    }
                    codigo = String.valueOf(b) + "," + String.valueOf(b2);

                    sql = "INSERT INTO codigo_relacion VALUES(null,'" + codigo + "','" + comb1.getSelectedItem() + "','" + comb2.getSelectedItem() + "','" + alcance + "', '1', '1',current_date()"
                            + ", current_time(), 1, 1, '1', '1')";
                    mdb.insertarBasicos(sql);
                }
                llenarTabla();
            }
        } else {

            sql = "INSERT INTO codigo_relacion VALUES(null,'65,65','NO','NO','NO', '1', '1',current_date()"
                    + ", current_time(), 1, 1, '1', '1')";
            mdb.insertarBasicos(sql);
            llenarTabla();
//sql="insert into prueba values(null,'65,65')";
            //  mdb.insertarBasicos(sql);
        }
    }

    public void llenarcombos() {
        String[] datos;
        datos = mdb.cargarCombos("SELECT descripcion \n"
                + "from certificado  \n"
                + "").split("Â¬");
        comb1.setModel(new DefaultComboBoxModel((Object[]) datos));
        datos = mdb.cargarCombos("SELECT descripcion \n"
                + "from certificadora  \n"
                + "").split("Â¬");
        comb2.setModel(new DefaultComboBoxModel((Object[]) datos));
        datos = mdb.cargarCombos("SELECT descripcion \n"
                + "from estandarescert  \n"
                + "").split("Â¬");
        comb3.setModel(new DefaultComboBoxModel((Object[]) datos));
        datos = mdb.cargarCombos("SELECT descripcion \n"
                + "from estandarescert  \n"
                + "").split("Â¬");
        comb4.setModel(new DefaultComboBoxModel((Object[]) datos));
        datos = mdb.cargarCombos("SELECT descripcion \n"
                + "from estandarescert  \n"
                + "").split("Â¬");
        comb5.setModel(new DefaultComboBoxModel((Object[]) datos));

    }
    String estatus = "2";
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String sql = "", sql1 = "select id from codigo_relacion where certificado='" + cert1 + "' and certificadora='" + cert2 + "' and alcance='" + alc + "' ";
        String co;
        System.out.println(sql1);
        co = mdb.comprobarExistencia(sql1);
        if (estatus.equals("2")) {

            sql = "UPDATE codigo_relacion SET ID_Situacion=2 where id=" + co + "";
            System.out.println(sql);
        } else if (estatus.equals("1")) {
            sql = "UPDATE codigo_relacion SET ID_Situacion=1 where id=" + co + "";
            System.out.println(sql);
        }

        mdb.actualizarBasicos(sql);
        llenarTabla();
    }//GEN-LAST:event_jButton4ActionPerformed

    public void llenarTabla() {
        String situacion = "";

        String where = "";
        situacion = comboSituacion.getSelectedItem() + "";
        if (situacion.equals("Inactivo")) {
            situacion = "2";

        } else if (situacion.equals("Activo")) {
            situacion = "1";
        }
        String sql;
        if (situacion.equals("Todos")) {
            sql = "SELECT codigo, certificado,certificadora,alcance FROM codigo_relacion where ID_Situacion<>3";
        } else {
            sql = "SELECT codigo, certificado,certificadora,alcance FROM codigo_relacion WHERE ID_Situacion=" + situacion;
        }
        System.out.println(sql);
        limpiar(Tabla);
        mdb.cargarInformacion4(modelo, 4, sql);
    }

    private void limpiar(JTable tabla) {
        while (tabla.getRowCount() > 0) {
            ((DefaultTableModel) tabla.getModel()).removeRow(0);
        }
    }
    private void add2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_add2ActionPerformed

    private void comb5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comb5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comb5ActionPerformed

    private void add1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_add1KeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_add1KeyPressed

    private void add1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_add1ItemStateChanged
        activarB();        // TODO add your handling code here:
    }//GEN-LAST:event_add1ItemStateChanged

    private void add2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_add2ItemStateChanged
        activarB();        // TODO add your handling code here:
    }//GEN-LAST:event_add2ItemStateChanged
    String cert1 = "", cert2 = "", alc = "";
    private void TablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMouseClicked
        cert1 = modelo.getValueAt(Tabla.getSelectedRow(), 1) + "";
        cert2 = modelo.getValueAt(Tabla.getSelectedRow(), 2) + "";
        alc = modelo.getValueAt(Tabla.getSelectedRow(), 3) + "";
// TODO add your handling code here:
    }//GEN-LAST:event_TablaMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void activarB() {
        if (add1.isSelected()) {

            comb4.setEnabled(true);
        } else {
            comb4.setEnabled(false);
        }
        if (add2.isSelected()) {

            comb5.setEnabled(true);
        } else {
            comb5.setEnabled(false);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla;
    private javax.swing.JCheckBox add1;
    private javax.swing.JCheckBox add2;
    private javax.swing.JLabel codgen;
    private javax.swing.JComboBox<String> comb1;
    private javax.swing.JComboBox<String> comb2;
    private javax.swing.JComboBox<String> comb3;
    private javax.swing.JComboBox<String> comb4;
    private javax.swing.JComboBox<String> comb5;
    private javax.swing.JComboBox<String> comboSituacion;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
