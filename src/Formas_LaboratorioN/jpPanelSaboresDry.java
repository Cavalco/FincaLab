/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formas_LaboratorioN;

/**
 *
 * @author Carlos Valdez
 */
public class jpPanelSaboresDry extends javax.swing.JPanel {

    /**
     * Creates new form jpPanelSaboresDry
     */
    public jpPanelSaboresDry() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane9 = new javax.swing.JScrollPane();
        Sweet = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        Fruity = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        Floral = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        SourFer = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        GreenVeg = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        Other = new javax.swing.JTable();
        jScrollPane12 = new javax.swing.JScrollPane();
        Roasted = new javax.swing.JTable();

        Sweet.setBackground(new java.awt.Color(255, 102, 102));
        Sweet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Brown Sugar", null},
                {"Molasses", null},
                {"Maple Sugar", null},
                {"Caramelized", null},
                {"Honey", null}
            },
            new String [] {
                "Sabor", "Intensidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(Sweet);

        Fruity.setBackground(new java.awt.Color(255, 204, 0));
        Fruity.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Berry", null},
                {"Blackberry", null},
                {"Raspberry", null},
                {"Blueberry", null},
                {"Strawberry", null},
                {"Dried Fruit", null},
                {"Raisen", null},
                {"Prune", null},
                {"Other fruit", null},
                {"coconut", null},
                {"Cherry", null},
                {"Pomagranite", null},
                {"Pinneapple", null},
                {"Grape", null},
                {"Apple", null},
                {"Peach", null},
                {"Pear", null},
                {"Citrus Fruit", null},
                {"Grapefruit", null},
                {"Orange", null},
                {"Lemon", null},
                {"Lime", null}
            },
            new String [] {
                "Sabor", "Intensidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(Fruity);

        Floral.setBackground(new java.awt.Color(255, 153, 102));
        Floral.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Black Tea", null},
                {"Chamomile", null},
                {"Rose", null},
                {"Jasmine", null}
            },
            new String [] {
                "Sabor", "Intensidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(Floral);

        SourFer.setBackground(new java.awt.Color(255, 255, 153));
        SourFer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Sour", null},
                {"Vinegar", null},
                {"Rancid butter", null},
                {"Rancid Cheese", null},
                {"Orange Acidity", null},
                {"Apple Acidity", null},
                {"Alcohol/Fermented", null},
                {"Winey", null},
                {"Whiskey", null},
                {"Fermented", null},
                {"Over-ripe", null}
            },
            new String [] {
                "Sabor", "Intensidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(SourFer);

        GreenVeg.setBackground(new java.awt.Color(102, 255, 102));
        GreenVeg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Olive Oil", null},
                {"Raw", null},
                {"Beany", null},
                {"Under-ripe", null},
                {"Pea pod", null},
                {"Fresh", null},
                {"Dark Green", null},
                {"Vegetative", null},
                {"Hay-like", null},
                {"Herb-like", null}
            },
            new String [] {
                "Sabor", "Intensidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(GreenVeg);

        Other.setBackground(new java.awt.Color(51, 255, 255));
        Other.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Papery/Musty", null},
                {"Stale", null},
                {"Cardboard", null},
                {"Papery", null},
                {"Woody", null},
                {"Moldy/Damp", null},
                {"Musty/Dusty", null},
                {"Musty/Earthy", null},
                {"Animalic", null},
                {"Meaty/Brothy", null},
                {"Phenolic", null},
                {"Chemical", null},
                {"Bitter", null},
                {"Salty", null},
                {"Medicinal", null},
                {"Petroleum", null},
                {"Skunky", null},
                {"Rubber", null}
            },
            new String [] {
                "Sabor", "Intensidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(Other);

        Roasted.setBackground(new java.awt.Color(0, 204, 255));
        Roasted.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Pipe Tobacco", null},
                {"Tobacco", null},
                {"Burnt", null},
                {"Acrid", null},
                {"Ashy", null},
                {"Smoky", null},
                {"Brown/Roast", null},
                {"Cereal", null}
            },
            new String [] {
                "Sabor", "Intensidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane12.setViewportView(Roasted);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Floral;
    private javax.swing.JTable Fruity;
    private javax.swing.JTable GreenVeg;
    private javax.swing.JTable Other;
    private javax.swing.JTable Roasted;
    private javax.swing.JTable SourFer;
    private javax.swing.JTable Sweet;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    // End of variables declaration//GEN-END:variables
}
