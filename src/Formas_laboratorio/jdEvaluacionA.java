/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formas_laboratorio;

import Idioma.Propiedades;
import Metodos_Configuraciones.metodosLaboratorio;
import static java.lang.Integer.parseInt;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import com.sun.java.swing.plaf.windows.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UnsupportedLookAndFeelException;
/**
 *
 * @author Contador
 */
public class jdEvaluacionA extends javax.swing.JDialog {

    /**
     * Creates new form jdEvaluacionA
     */
        Propiedades idioma;
    String Idioma;
    metodosLaboratorio mdb;
    Connection cn;
    String csm = "", comunindad = "", tipo = "", id, forma = "";
    jpBitacora jpDP;

    public jdEvaluacionA(java.awt.Frame parent, boolean modal, String tipo, String id, String csm, String comunindad, String tipoc, String forma, Connection c,String calcer, String Idioma) {
        super(parent, modal);
            try {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(jdEvaluacionA.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(jdEvaluacionA.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(jdEvaluacionA.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedLookAndFeelException ex) {
                Logger.getLogger(jdEvaluacionA.class.getName()).log(Level.SEVERE, null, ex);
            }
        initComponents();
        this.csm = csm;
        this.comunindad = comunindad;
           
        this.tipo = tipoc;
        this.forma = forma;
        this.id = id;
        Csm.setText(csm);
        Comunidad.setText(comunindad);
        Tipo.setText(tipoc);
        Forma.setText(forma);
        calcere.setText(calcer);
        cn = c;
          this.Idioma=Idioma;
          mdb = new metodosLaboratorio(cn,Idioma);
            Date date = new Date(System.currentTimeMillis());
        calendario.setMaxSelectableDate(date);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        calendario = new com.toedter.calendar.JDateChooser();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        PesoEv = new javax.swing.JTextField();
        humedado = new javax.swing.JTextField();
        humedadc = new javax.swing.JTextField();
        evaluador = new javax.swing.JComboBox<>();
        puntuacion = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        uniformidad = new javax.swing.JSpinner();
        color = new javax.swing.JSpinner();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        Csm = new javax.swing.JTextField();
        Comunidad = new javax.swing.JTextField();
        calcere = new javax.swing.JTextField();
        Tipo = new javax.swing.JTextField();
        Forma = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        Guardar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        Doro = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        A1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        A2 = new javax.swing.JTextField();
        A3 = new javax.swing.JTextField();
        A4 = new javax.swing.JTextField();
        A5 = new javax.swing.JTextField();
        A6 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        B1 = new javax.swing.JTextField();
        B2 = new javax.swing.JTextField();
        B3 = new javax.swing.JTextField();
        B4 = new javax.swing.JTextField();
        B5 = new javax.swing.JTextField();
        B6 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        AT = new javax.swing.JTextField();
        BT = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        C4 = new javax.swing.JTextField();
        C1 = new javax.swing.JTextField();
        C2 = new javax.swing.JTextField();
        C3 = new javax.swing.JTextField();
        C5 = new javax.swing.JTextField();
        C6 = new javax.swing.JTextField();
        CT = new javax.swing.JTextField();
        D1 = new javax.swing.JTextField();
        D2 = new javax.swing.JTextField();
        D3 = new javax.swing.JTextField();
        D4 = new javax.swing.JTextField();
        D5 = new javax.swing.JTextField();
        D6 = new javax.swing.JTextField();
        DT = new javax.swing.JTextField();
        F4 = new javax.swing.JTextField();
        F1 = new javax.swing.JTextField();
        F2 = new javax.swing.JTextField();
        F3 = new javax.swing.JTextField();
        F5 = new javax.swing.JTextField();
        F6 = new javax.swing.JTextField();
        FT = new javax.swing.JTextField();
        G1 = new javax.swing.JTextField();
        G2 = new javax.swing.JTextField();
        G3 = new javax.swing.JTextField();
        G4 = new javax.swing.JTextField();
        G5 = new javax.swing.JTextField();
        G6 = new javax.swing.JTextField();
        GT = new javax.swing.JTextField();
        E1 = new javax.swing.JTextField();
        E2 = new javax.swing.JTextField();
        E3 = new javax.swing.JTextField();
        E4 = new javax.swing.JTextField();
        E5 = new javax.swing.JTextField();
        E6 = new javax.swing.JTextField();
        ET = new javax.swing.JTextField();
        L4 = new javax.swing.JTextField();
        L1 = new javax.swing.JTextField();
        L2 = new javax.swing.JTextField();
        L3 = new javax.swing.JTextField();
        L5 = new javax.swing.JTextField();
        L6 = new javax.swing.JTextField();
        LT = new javax.swing.JTextField();
        M1 = new javax.swing.JTextField();
        M2 = new javax.swing.JTextField();
        M3 = new javax.swing.JTextField();
        M4 = new javax.swing.JTextField();
        M5 = new javax.swing.JTextField();
        M6 = new javax.swing.JTextField();
        MT = new javax.swing.JTextField();
        K1 = new javax.swing.JTextField();
        K2 = new javax.swing.JTextField();
        I4 = new javax.swing.JTextField();
        K3 = new javax.swing.JTextField();
        I1 = new javax.swing.JTextField();
        K4 = new javax.swing.JTextField();
        I2 = new javax.swing.JTextField();
        K5 = new javax.swing.JTextField();
        I3 = new javax.swing.JTextField();
        K6 = new javax.swing.JTextField();
        I5 = new javax.swing.JTextField();
        KT = new javax.swing.JTextField();
        I6 = new javax.swing.JTextField();
        IT = new javax.swing.JTextField();
        J1 = new javax.swing.JTextField();
        J2 = new javax.swing.JTextField();
        J3 = new javax.swing.JTextField();
        J4 = new javax.swing.JTextField();
        J5 = new javax.swing.JTextField();
        J6 = new javax.swing.JTextField();
        JT = new javax.swing.JTextField();
        H1 = new javax.swing.JTextField();
        H2 = new javax.swing.JTextField();
        H3 = new javax.swing.JTextField();
        H4 = new javax.swing.JTextField();
        H5 = new javax.swing.JTextField();
        H6 = new javax.swing.JTextField();
        HT = new javax.swing.JTextField();
        R4 = new javax.swing.JTextField();
        R1 = new javax.swing.JTextField();
        R2 = new javax.swing.JTextField();
        R3 = new javax.swing.JTextField();
        R5 = new javax.swing.JTextField();
        R6 = new javax.swing.JTextField();
        RT = new javax.swing.JTextField();
        S1 = new javax.swing.JTextField();
        S2 = new javax.swing.JTextField();
        S3 = new javax.swing.JTextField();
        S4 = new javax.swing.JTextField();
        S5 = new javax.swing.JTextField();
        S6 = new javax.swing.JTextField();
        ST = new javax.swing.JTextField();
        Q1 = new javax.swing.JTextField();
        Q2 = new javax.swing.JTextField();
        O4 = new javax.swing.JTextField();
        Q3 = new javax.swing.JTextField();
        O1 = new javax.swing.JTextField();
        Q4 = new javax.swing.JTextField();
        O2 = new javax.swing.JTextField();
        Q5 = new javax.swing.JTextField();
        O3 = new javax.swing.JTextField();
        Q6 = new javax.swing.JTextField();
        O5 = new javax.swing.JTextField();
        QT = new javax.swing.JTextField();
        O6 = new javax.swing.JTextField();
        X4 = new javax.swing.JTextField();
        OT = new javax.swing.JTextField();
        X1 = new javax.swing.JTextField();
        P1 = new javax.swing.JTextField();
        X2 = new javax.swing.JTextField();
        P2 = new javax.swing.JTextField();
        X3 = new javax.swing.JTextField();
        P3 = new javax.swing.JTextField();
        X5 = new javax.swing.JTextField();
        P4 = new javax.swing.JTextField();
        X6 = new javax.swing.JTextField();
        P5 = new javax.swing.JTextField();
        XT = new javax.swing.JTextField();
        P6 = new javax.swing.JTextField();
        PT = new javax.swing.JTextField();
        W1 = new javax.swing.JTextField();
        W2 = new javax.swing.JTextField();
        U4 = new javax.swing.JTextField();
        W3 = new javax.swing.JTextField();
        N1 = new javax.swing.JTextField();
        N2 = new javax.swing.JTextField();
        N3 = new javax.swing.JTextField();
        N4 = new javax.swing.JTextField();
        N5 = new javax.swing.JTextField();
        N6 = new javax.swing.JTextField();
        U1 = new javax.swing.JTextField();
        W4 = new javax.swing.JTextField();
        U2 = new javax.swing.JTextField();
        W5 = new javax.swing.JTextField();
        U3 = new javax.swing.JTextField();
        W6 = new javax.swing.JTextField();
        U5 = new javax.swing.JTextField();
        WT = new javax.swing.JTextField();
        U6 = new javax.swing.JTextField();
        UT = new javax.swing.JTextField();
        V1 = new javax.swing.JTextField();
        V2 = new javax.swing.JTextField();
        V3 = new javax.swing.JTextField();
        V4 = new javax.swing.JTextField();
        V5 = new javax.swing.JTextField();
        V6 = new javax.swing.JTextField();
        VT = new javax.swing.JTextField();
        T1 = new javax.swing.JTextField();
        T2 = new javax.swing.JTextField();
        T3 = new javax.swing.JTextField();
        T4 = new javax.swing.JTextField();
        T5 = new javax.swing.JTextField();
        T6 = new javax.swing.JTextField();
        TT = new javax.swing.JTextField();
        NT = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel49 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();

        setTitle("Evaluacion por Aspecto");
        setAutoRequestFocus(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        calendario.setDateFormatString("dd-MMM-yyyy");

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel33.setText("Datos de Evaluacion");

        jLabel34.setText("Fecha:");

        PesoEv.setText("0");
        PesoEv.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PesoEvFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PesoEvFocusLost(evt);
            }
        });
        PesoEv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PesoEvKeyTyped(evt);
            }
        });

        humedado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                humedadoKeyTyped(evt);
            }
        });

        humedadc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                humedadcActionPerformed(evt);
            }
        });
        humedadc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                humedadcKeyTyped(evt);
            }
        });

        evaluador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "James Kosalos", "Jacob Frankel", "Carlos bustamante", "Gigi Mengistu", "Tom Bennett" }));
        evaluador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evaluadorActionPerformed(evt);
            }
        });

        puntuacion.setEditable(false);
        puntuacion.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        puntuacion.setText("0");

        jLabel35.setText("Peso Evaluado:");

        jLabel36.setText("Uniformidad del oro:");

        jLabel37.setText("Humedad Oro ");

        jLabel38.setText("Humedad Cascara");

        jLabel39.setText("Color");

        jLabel40.setText("Evaluador");

        jLabel41.setText("Puntuacion");

        uniformidad.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        color.setModel(new javax.swing.SpinnerNumberModel(1, 1, 8, 1));

        jLabel42.setText("No. De CSM");

        jLabel43.setText("Comunidad");

        jLabel44.setText("Calificacion Cereza");

        jLabel45.setText("Tipo");

        jLabel46.setText("Forma");

        Csm.setEditable(false);
        Csm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CsmActionPerformed(evt);
            }
        });

        Comunidad.setEditable(false);

        calcere.setEditable(false);
        calcere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcereActionPerformed(evt);
            }
        });

        Tipo.setEditable(false);

        Forma.setEditable(false);
        Forma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormaActionPerformed(evt);
            }
        });

        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel47.setText("%");

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel48.setText("%");

        jLabel50.setText("Densidad en Oro:");

        jLabel51.setText("gm");

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(255, 0, 0));
        jLabel52.setText("*");

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(255, 0, 0));
        jLabel53.setText("*");

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(255, 0, 0));
        jLabel54.setText("*");

        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(255, 0, 0));
        jLabel55.setText("*");

        jLabel57.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(255, 0, 0));
        jLabel57.setText("Los campos marcados con (*) ");

        jLabel58.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(255, 0, 0));
        jLabel58.setText("son obligatorios");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel52)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel34))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel53)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel35))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel36))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel54)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel37))
                    .addComponent(jLabel38)
                    .addComponent(jLabel39)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel55)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel40))
                    .addComponent(jLabel50))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PesoEv, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(calendario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel51)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Doro, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(evaluador, javax.swing.GroupLayout.Alignment.LEADING, 0, 119, Short.MAX_VALUE)
                            .addComponent(color, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(humedado)
                                    .addComponent(humedadc, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(uniformidad, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addComponent(jSeparator1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel57)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(Guardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel43)
                                            .addComponent(jLabel44)
                                            .addComponent(jLabel45)
                                            .addComponent(jLabel42))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Csm, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                                            .addComponent(Comunidad)
                                            .addComponent(calcere)
                                            .addComponent(Tipo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel46)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(95, 95, 95)
                                        .addComponent(Forma, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel41)
                                .addGap(48, 48, 48)
                                .addComponent(puntuacion, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel58))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel42))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Csm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(Comunidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(calcere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(Tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Forma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calendario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel34)
                        .addComponent(jLabel52)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PesoEv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel51)
                    .addComponent(jLabel53))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(uniformidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humedado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37)
                    .addComponent(jLabel47)
                    .addComponent(jLabel54))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humedadc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38)
                    .addComponent(jLabel48))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(evaluador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40)
                    .addComponent(jLabel55))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Doro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(puntuacion, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41))
                .addGap(48, 48, 48)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Guardar)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel57)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel58)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        A1.setBackground(new java.awt.Color(204, 204, 204));
        A1.setText("0");
        A1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                A1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                A1FocusLost(evt);
            }
        });
        A1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                A1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                A1KeyTyped(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Broca severa");
        jLabel1.setToolTipText("");

        A2.setText("0");
        A2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                A2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                A2FocusLost(evt);
            }
        });
        A2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A2ActionPerformed(evt);
            }
        });
        A2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                A2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                A2KeyTyped(evt);
            }
        });

        A3.setBackground(new java.awt.Color(204, 204, 204));
        A3.setText("0");
        A3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                A3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                A3FocusLost(evt);
            }
        });
        A3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                A3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                A3KeyTyped(evt);
            }
        });

        A4.setText("0");
        A4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                A4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                A4FocusLost(evt);
            }
        });
        A4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A4ActionPerformed(evt);
            }
        });
        A4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                A4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                A4KeyTyped(evt);
            }
        });

        A5.setBackground(new java.awt.Color(204, 204, 204));
        A5.setText("0");
        A5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                A5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                A5FocusLost(evt);
            }
        });
        A5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                A5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                A5KeyTyped(evt);
            }
        });

        A6.setText("0");
        A6.setNextFocusableComponent(B1);
        A6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                A6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                A6FocusLost(evt);
            }
        });
        A6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A6ActionPerformed(evt);
            }
        });
        A6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                A6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                A6KeyTyped(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Broca");
        jLabel2.setToolTipText("");

        B1.setBackground(new java.awt.Color(204, 204, 204));
        B1.setText("0");
        B1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                B1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                B1FocusLost(evt);
            }
        });
        B1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                B1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                B1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                B1KeyTyped(evt);
            }
        });

        B2.setText("0");
        B2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                B2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                B2FocusLost(evt);
            }
        });
        B2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B2ActionPerformed(evt);
            }
        });
        B2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                B2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                B2KeyTyped(evt);
            }
        });

        B3.setBackground(new java.awt.Color(204, 204, 204));
        B3.setText("0");
        B3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                B3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                B3FocusLost(evt);
            }
        });
        B3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                B3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                B3KeyTyped(evt);
            }
        });

        B4.setText("0");
        B4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                B4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                B4FocusLost(evt);
            }
        });
        B4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B4ActionPerformed(evt);
            }
        });
        B4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                B4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                B4KeyTyped(evt);
            }
        });

        B5.setBackground(new java.awt.Color(204, 204, 204));
        B5.setText("0");
        B5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                B5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                B5FocusLost(evt);
            }
        });
        B5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                B5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                B5KeyTyped(evt);
            }
        });

        B6.setText("0");
        B6.setNextFocusableComponent(C1);
        B6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                B6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                B6FocusLost(evt);
            }
        });
        B6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B6ActionPerformed(evt);
            }
        });
        B6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                B6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                B6KeyTyped(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Negro");
        jLabel3.setToolTipText("");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Agrio");
        jLabel4.setToolTipText("");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Peso, gm.");
        jLabel5.setToolTipText("");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Negro Parcial");
        jLabel6.setToolTipText("");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Blanco/Flotador");
        jLabel7.setToolTipText("");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Elefante");
        jLabel8.setToolTipText("");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Daño y Agrio Parcial");
        jLabel9.setToolTipText("");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Daño o Mordido");
        jLabel10.setToolTipText("");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("Aplastado");
        jLabel11.setToolTipText("");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("Agrio Parcial");
        jLabel12.setToolTipText("");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText("Daño Por Hongos");
        jLabel13.setToolTipText("");

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel14.setText("Arrugado");
        jLabel14.setToolTipText("");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel15.setText("Inmaduro");
        jLabel15.setToolTipText("");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("Sobresecado");
        jLabel16.setToolTipText("");

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText("Malformado");
        jLabel17.setToolTipText("");

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel18.setText("Cascara o Pulpa Seca");
        jLabel18.setToolTipText("");

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel19.setText("Material Extra");
        jLabel19.setToolTipText("");

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel20.setText("Pergamino");
        jLabel20.setToolTipText("");

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel21.setText("Cereza Seca");
        jLabel21.setToolTipText("");

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel22.setText("Quebrado");
        jLabel22.setToolTipText("");

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel23.setText("Grano Humedo");
        jLabel23.setToolTipText("");

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel24.setText("Concha");
        jLabel24.setToolTipText("");

        jLabel25.setText("19");

        jLabel26.setText("18");

        jLabel27.setText("17");

        jLabel28.setText("16");

        jLabel29.setText("15");

        jLabel30.setText("F");

        jLabel31.setText("Criba");

        AT.setEditable(false);
        AT.setText("0");
        AT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ATActionPerformed(evt);
            }
        });

        BT.setEditable(false);
        BT.setText("0");
        BT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTActionPerformed(evt);
            }
        });

        jLabel32.setText("Total");

        C4.setText("0");
        C4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                C4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                C4FocusLost(evt);
            }
        });
        C4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C4ActionPerformed(evt);
            }
        });
        C4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                C4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                C4KeyTyped(evt);
            }
        });

        C1.setBackground(new java.awt.Color(204, 204, 204));
        C1.setText("0");
        C1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                C1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                C1FocusLost(evt);
            }
        });
        C1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                C1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                C1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                C1KeyTyped(evt);
            }
        });

        C2.setText("0");
        C2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                C2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                C2FocusLost(evt);
            }
        });
        C2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C2ActionPerformed(evt);
            }
        });
        C2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                C2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                C2KeyTyped(evt);
            }
        });

        C3.setBackground(new java.awt.Color(204, 204, 204));
        C3.setText("0");
        C3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                C3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                C3FocusLost(evt);
            }
        });
        C3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                C3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                C3KeyTyped(evt);
            }
        });

        C5.setBackground(new java.awt.Color(204, 204, 204));
        C5.setText("0");
        C5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                C5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                C5FocusLost(evt);
            }
        });
        C5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                C5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                C5KeyTyped(evt);
            }
        });

        C6.setText("0");
        C6.setNextFocusableComponent(D1);
        C6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                C6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                C6FocusLost(evt);
            }
        });
        C6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C6ActionPerformed(evt);
            }
        });
        C6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                C6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                C6KeyTyped(evt);
            }
        });

        CT.setEditable(false);
        CT.setText("0");
        CT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CTActionPerformed(evt);
            }
        });

        D1.setBackground(new java.awt.Color(204, 204, 204));
        D1.setText("0");
        D1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                D1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                D1FocusLost(evt);
            }
        });
        D1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                D1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                D1KeyTyped(evt);
            }
        });

        D2.setText("0");
        D2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                D2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                D2FocusLost(evt);
            }
        });
        D2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D2ActionPerformed(evt);
            }
        });
        D2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                D2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                D2KeyTyped(evt);
            }
        });

        D3.setBackground(new java.awt.Color(204, 204, 204));
        D3.setText("0");
        D3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                D3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                D3FocusLost(evt);
            }
        });
        D3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                D3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                D3KeyTyped(evt);
            }
        });

        D4.setText("0");
        D4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                D4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                D4FocusLost(evt);
            }
        });
        D4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D4ActionPerformed(evt);
            }
        });
        D4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                D4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                D4KeyTyped(evt);
            }
        });

        D5.setBackground(new java.awt.Color(204, 204, 204));
        D5.setText("0");
        D5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                D5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                D5FocusLost(evt);
            }
        });
        D5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                D5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                D5KeyTyped(evt);
            }
        });

        D6.setText("0");
        D6.setNextFocusableComponent(E1);
        D6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                D6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                D6FocusLost(evt);
            }
        });
        D6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D6ActionPerformed(evt);
            }
        });
        D6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                D6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                D6KeyTyped(evt);
            }
        });

        DT.setEditable(false);
        DT.setText("0");
        DT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DTActionPerformed(evt);
            }
        });

        F4.setText("0");
        F4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                F4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                F4FocusLost(evt);
            }
        });
        F4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F4ActionPerformed(evt);
            }
        });
        F4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                F4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                F4KeyTyped(evt);
            }
        });

        F1.setBackground(new java.awt.Color(204, 204, 204));
        F1.setText("0");
        F1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                F1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                F1FocusLost(evt);
            }
        });
        F1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                F1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                F1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                F1KeyTyped(evt);
            }
        });

        F2.setText("0");
        F2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                F2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                F2FocusLost(evt);
            }
        });
        F2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F2ActionPerformed(evt);
            }
        });
        F2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                F2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                F2KeyTyped(evt);
            }
        });

        F3.setBackground(new java.awt.Color(204, 204, 204));
        F3.setText("0");
        F3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                F3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                F3FocusLost(evt);
            }
        });
        F3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                F3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                F3KeyTyped(evt);
            }
        });

        F5.setBackground(new java.awt.Color(204, 204, 204));
        F5.setText("0");
        F5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                F5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                F5FocusLost(evt);
            }
        });
        F5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                F5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                F5KeyTyped(evt);
            }
        });

        F6.setText("0");
        F6.setNextFocusableComponent(G1);
        F6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                F6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                F6FocusLost(evt);
            }
        });
        F6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F6ActionPerformed(evt);
            }
        });
        F6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                F6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                F6KeyTyped(evt);
            }
        });

        FT.setEditable(false);
        FT.setText("0");
        FT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FTActionPerformed(evt);
            }
        });

        G1.setBackground(new java.awt.Color(204, 204, 204));
        G1.setText("0");
        G1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                G1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                G1FocusLost(evt);
            }
        });
        G1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                G1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                G1KeyTyped(evt);
            }
        });

        G2.setText("0");
        G2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                G2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                G2FocusLost(evt);
            }
        });
        G2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G2ActionPerformed(evt);
            }
        });
        G2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                G2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                G2KeyTyped(evt);
            }
        });

        G3.setBackground(new java.awt.Color(204, 204, 204));
        G3.setText("0");
        G3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                G3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                G3FocusLost(evt);
            }
        });
        G3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                G3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                G3KeyTyped(evt);
            }
        });

        G4.setText("0");
        G4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                G4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                G4FocusLost(evt);
            }
        });
        G4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G4ActionPerformed(evt);
            }
        });
        G4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                G4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                G4KeyTyped(evt);
            }
        });

        G5.setBackground(new java.awt.Color(204, 204, 204));
        G5.setText("0");
        G5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                G5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                G5FocusLost(evt);
            }
        });
        G5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                G5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                G5KeyTyped(evt);
            }
        });

        G6.setText("0");
        G6.setNextFocusableComponent(H1);
        G6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                G6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                G6FocusLost(evt);
            }
        });
        G6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G6ActionPerformed(evt);
            }
        });
        G6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                G6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                G6KeyTyped(evt);
            }
        });

        GT.setEditable(false);
        GT.setText("0");
        GT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GTActionPerformed(evt);
            }
        });

        E1.setBackground(new java.awt.Color(204, 204, 204));
        E1.setText("0");
        E1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                E1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                E1FocusLost(evt);
            }
        });
        E1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                E1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                E1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                E1KeyTyped(evt);
            }
        });

        E2.setText("0");
        E2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                E2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                E2FocusLost(evt);
            }
        });
        E2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E2ActionPerformed(evt);
            }
        });
        E2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                E2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                E2KeyTyped(evt);
            }
        });

        E3.setBackground(new java.awt.Color(204, 204, 204));
        E3.setText("0");
        E3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                E3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                E3FocusLost(evt);
            }
        });
        E3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                E3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                E3KeyTyped(evt);
            }
        });

        E4.setText("0");
        E4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                E4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                E4FocusLost(evt);
            }
        });
        E4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E4ActionPerformed(evt);
            }
        });
        E4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                E4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                E4KeyTyped(evt);
            }
        });

        E5.setBackground(new java.awt.Color(204, 204, 204));
        E5.setText("0");
        E5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                E5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                E5FocusLost(evt);
            }
        });
        E5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                E5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                E5KeyTyped(evt);
            }
        });

        E6.setText("0");
        E6.setNextFocusableComponent(F1);
        E6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                E6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                E6FocusLost(evt);
            }
        });
        E6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E6ActionPerformed(evt);
            }
        });
        E6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                E6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                E6KeyTyped(evt);
            }
        });

        ET.setEditable(false);
        ET.setText("0");
        ET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ETActionPerformed(evt);
            }
        });

        L4.setText("0");
        L4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                L4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                L4FocusLost(evt);
            }
        });
        L4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L4ActionPerformed(evt);
            }
        });
        L4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                L4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                L4KeyTyped(evt);
            }
        });

        L1.setBackground(new java.awt.Color(204, 204, 204));
        L1.setText("0");
        L1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                L1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                L1FocusLost(evt);
            }
        });
        L1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                L1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                L1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                L1KeyTyped(evt);
            }
        });

        L2.setText("0");
        L2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                L2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                L2FocusLost(evt);
            }
        });
        L2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L2ActionPerformed(evt);
            }
        });
        L2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                L2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                L2KeyTyped(evt);
            }
        });

        L3.setBackground(new java.awt.Color(204, 204, 204));
        L3.setText("0");
        L3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                L3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                L3FocusLost(evt);
            }
        });
        L3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                L3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                L3KeyTyped(evt);
            }
        });

        L5.setBackground(new java.awt.Color(204, 204, 204));
        L5.setText("0");
        L5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                L5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                L5FocusLost(evt);
            }
        });
        L5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                L5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                L5KeyTyped(evt);
            }
        });

        L6.setText("0");
        L6.setNextFocusableComponent(M1);
        L6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                L6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                L6FocusLost(evt);
            }
        });
        L6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L6ActionPerformed(evt);
            }
        });
        L6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                L6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                L6KeyTyped(evt);
            }
        });

        LT.setEditable(false);
        LT.setText("0");
        LT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LTActionPerformed(evt);
            }
        });

        M1.setBackground(new java.awt.Color(204, 204, 204));
        M1.setText("0");
        M1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                M1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                M1FocusLost(evt);
            }
        });
        M1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                M1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                M1KeyTyped(evt);
            }
        });

        M2.setText("0");
        M2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                M2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                M2FocusLost(evt);
            }
        });
        M2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M2ActionPerformed(evt);
            }
        });
        M2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                M2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                M2KeyTyped(evt);
            }
        });

        M3.setBackground(new java.awt.Color(204, 204, 204));
        M3.setText("0");
        M3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                M3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                M3FocusLost(evt);
            }
        });
        M3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                M3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                M3KeyTyped(evt);
            }
        });

        M4.setText("0");
        M4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                M4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                M4FocusLost(evt);
            }
        });
        M4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M4ActionPerformed(evt);
            }
        });
        M4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                M4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                M4KeyTyped(evt);
            }
        });

        M5.setBackground(new java.awt.Color(204, 204, 204));
        M5.setText("0");
        M5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                M5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                M5FocusLost(evt);
            }
        });
        M5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                M5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                M5KeyTyped(evt);
            }
        });

        M6.setText("0");
        M6.setNextFocusableComponent(N1);
        M6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                M6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                M6FocusLost(evt);
            }
        });
        M6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M6ActionPerformed(evt);
            }
        });
        M6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                M6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                M6KeyTyped(evt);
            }
        });

        MT.setEditable(false);
        MT.setText("0");
        MT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MTActionPerformed(evt);
            }
        });

        K1.setBackground(new java.awt.Color(204, 204, 204));
        K1.setText("0");
        K1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                K1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                K1FocusLost(evt);
            }
        });
        K1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                K1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                K1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                K1KeyTyped(evt);
            }
        });

        K2.setText("0");
        K2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                K2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                K2FocusLost(evt);
            }
        });
        K2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K2ActionPerformed(evt);
            }
        });
        K2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                K2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                K2KeyTyped(evt);
            }
        });

        I4.setText("0");
        I4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                I4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                I4FocusLost(evt);
            }
        });
        I4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I4ActionPerformed(evt);
            }
        });
        I4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                I4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                I4KeyTyped(evt);
            }
        });

        K3.setBackground(new java.awt.Color(204, 204, 204));
        K3.setText("0");
        K3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                K3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                K3FocusLost(evt);
            }
        });
        K3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                K3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                K3KeyTyped(evt);
            }
        });

        I1.setBackground(new java.awt.Color(204, 204, 204));
        I1.setText("0");
        I1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                I1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                I1FocusLost(evt);
            }
        });
        I1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                I1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                I1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                I1KeyTyped(evt);
            }
        });

        K4.setText("0");
        K4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                K4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                K4FocusLost(evt);
            }
        });
        K4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K4ActionPerformed(evt);
            }
        });
        K4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                K4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                K4KeyTyped(evt);
            }
        });

        I2.setText("0");
        I2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                I2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                I2FocusLost(evt);
            }
        });
        I2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I2ActionPerformed(evt);
            }
        });
        I2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                I2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                I2KeyTyped(evt);
            }
        });

        K5.setBackground(new java.awt.Color(204, 204, 204));
        K5.setText("0");
        K5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                K5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                K5FocusLost(evt);
            }
        });
        K5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                K5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                K5KeyTyped(evt);
            }
        });

        I3.setBackground(new java.awt.Color(204, 204, 204));
        I3.setText("0");
        I3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                I3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                I3FocusLost(evt);
            }
        });
        I3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                I3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                I3KeyTyped(evt);
            }
        });

        K6.setText("0");
        K6.setNextFocusableComponent(L1);
        K6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                K6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                K6FocusLost(evt);
            }
        });
        K6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K6ActionPerformed(evt);
            }
        });
        K6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                K6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                K6KeyTyped(evt);
            }
        });

        I5.setBackground(new java.awt.Color(204, 204, 204));
        I5.setText("0");
        I5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                I5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                I5FocusLost(evt);
            }
        });
        I5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                I5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                I5KeyTyped(evt);
            }
        });

        KT.setEditable(false);
        KT.setText("0");
        KT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KTActionPerformed(evt);
            }
        });

        I6.setText("0");
        I6.setNextFocusableComponent(J1);
        I6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                I6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                I6FocusLost(evt);
            }
        });
        I6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I6ActionPerformed(evt);
            }
        });
        I6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                I6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                I6KeyTyped(evt);
            }
        });

        IT.setEditable(false);
        IT.setText("0");
        IT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ITActionPerformed(evt);
            }
        });

        J1.setBackground(new java.awt.Color(204, 204, 204));
        J1.setText("0");
        J1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                J1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                J1FocusLost(evt);
            }
        });
        J1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                J1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                J1KeyTyped(evt);
            }
        });

        J2.setText("0");
        J2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                J2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                J2FocusLost(evt);
            }
        });
        J2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                J2ActionPerformed(evt);
            }
        });
        J2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                J2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                J2KeyTyped(evt);
            }
        });

        J3.setBackground(new java.awt.Color(204, 204, 204));
        J3.setText("0");
        J3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                J3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                J3FocusLost(evt);
            }
        });
        J3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                J3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                J3KeyTyped(evt);
            }
        });

        J4.setText("0");
        J4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                J4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                J4FocusLost(evt);
            }
        });
        J4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                J4ActionPerformed(evt);
            }
        });
        J4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                J4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                J4KeyTyped(evt);
            }
        });

        J5.setBackground(new java.awt.Color(204, 204, 204));
        J5.setText("0");
        J5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                J5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                J5FocusLost(evt);
            }
        });
        J5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                J5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                J5KeyTyped(evt);
            }
        });

        J6.setText("0");
        J6.setNextFocusableComponent(K1);
        J6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                J6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                J6FocusLost(evt);
            }
        });
        J6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                J6ActionPerformed(evt);
            }
        });
        J6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                J6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                J6KeyTyped(evt);
            }
        });

        JT.setEditable(false);
        JT.setText("0");
        JT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTActionPerformed(evt);
            }
        });

        H1.setBackground(new java.awt.Color(204, 204, 204));
        H1.setText("0");
        H1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                H1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                H1FocusLost(evt);
            }
        });
        H1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                H1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                H1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                H1KeyTyped(evt);
            }
        });

        H2.setText("0");
        H2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                H2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                H2FocusLost(evt);
            }
        });
        H2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H2ActionPerformed(evt);
            }
        });
        H2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                H2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                H2KeyTyped(evt);
            }
        });

        H3.setBackground(new java.awt.Color(204, 204, 204));
        H3.setText("0");
        H3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                H3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                H3FocusLost(evt);
            }
        });
        H3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                H3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                H3KeyTyped(evt);
            }
        });

        H4.setText("0");
        H4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                H4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                H4FocusLost(evt);
            }
        });
        H4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H4ActionPerformed(evt);
            }
        });
        H4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                H4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                H4KeyTyped(evt);
            }
        });

        H5.setBackground(new java.awt.Color(204, 204, 204));
        H5.setText("0");
        H5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                H5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                H5FocusLost(evt);
            }
        });
        H5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                H5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                H5KeyTyped(evt);
            }
        });

        H6.setText("0");
        H6.setNextFocusableComponent(I1);
        H6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                H6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                H6FocusLost(evt);
            }
        });
        H6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H6ActionPerformed(evt);
            }
        });
        H6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                H6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                H6KeyTyped(evt);
            }
        });

        HT.setEditable(false);
        HT.setText("0");
        HT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HTActionPerformed(evt);
            }
        });

        R4.setText("0");
        R4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                R4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                R4FocusLost(evt);
            }
        });
        R4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R4ActionPerformed(evt);
            }
        });
        R4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                R4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                R4KeyTyped(evt);
            }
        });

        R1.setBackground(new java.awt.Color(204, 204, 204));
        R1.setText("0");
        R1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                R1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                R1FocusLost(evt);
            }
        });
        R1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                R1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                R1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                R1KeyTyped(evt);
            }
        });

        R2.setText("0");
        R2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                R2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                R2FocusLost(evt);
            }
        });
        R2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R2ActionPerformed(evt);
            }
        });
        R2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                R2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                R2KeyTyped(evt);
            }
        });

        R3.setBackground(new java.awt.Color(204, 204, 204));
        R3.setText("0");
        R3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                R3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                R3FocusLost(evt);
            }
        });
        R3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                R3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                R3KeyTyped(evt);
            }
        });

        R5.setBackground(new java.awt.Color(204, 204, 204));
        R5.setText("0");
        R5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                R5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                R5FocusLost(evt);
            }
        });
        R5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                R5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                R5KeyTyped(evt);
            }
        });

        R6.setText("0");
        R6.setNextFocusableComponent(S1);
        R6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                R6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                R6FocusLost(evt);
            }
        });
        R6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R6ActionPerformed(evt);
            }
        });
        R6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                R6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                R6KeyTyped(evt);
            }
        });

        RT.setEditable(false);
        RT.setText("0");
        RT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RTActionPerformed(evt);
            }
        });

        S1.setBackground(new java.awt.Color(204, 204, 204));
        S1.setText("0");
        S1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                S1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                S1FocusLost(evt);
            }
        });
        S1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                S1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                S1KeyTyped(evt);
            }
        });

        S2.setText("0");
        S2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                S2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                S2FocusLost(evt);
            }
        });
        S2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S2ActionPerformed(evt);
            }
        });
        S2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                S2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                S2KeyTyped(evt);
            }
        });

        S3.setBackground(new java.awt.Color(204, 204, 204));
        S3.setText("0");
        S3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                S3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                S3FocusLost(evt);
            }
        });
        S3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S3ActionPerformed(evt);
            }
        });
        S3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                S3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                S3KeyTyped(evt);
            }
        });

        S4.setText("0");
        S4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                S4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                S4FocusLost(evt);
            }
        });
        S4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S4ActionPerformed(evt);
            }
        });
        S4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                S4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                S4KeyTyped(evt);
            }
        });

        S5.setBackground(new java.awt.Color(204, 204, 204));
        S5.setText("0");
        S5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                S5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                S5FocusLost(evt);
            }
        });
        S5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                S5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                S5KeyTyped(evt);
            }
        });

        S6.setText("0");
        S6.setNextFocusableComponent(T1);
        S6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                S6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                S6FocusLost(evt);
            }
        });
        S6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S6ActionPerformed(evt);
            }
        });
        S6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                S6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                S6KeyTyped(evt);
            }
        });

        ST.setEditable(false);
        ST.setText("0");
        ST.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                STActionPerformed(evt);
            }
        });

        Q1.setBackground(new java.awt.Color(204, 204, 204));
        Q1.setText("0");
        Q1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Q1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Q1FocusLost(evt);
            }
        });
        Q1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Q1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Q1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Q1KeyTyped(evt);
            }
        });

        Q2.setText("0");
        Q2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Q2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Q2FocusLost(evt);
            }
        });
        Q2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q2ActionPerformed(evt);
            }
        });
        Q2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Q2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Q2KeyTyped(evt);
            }
        });

        O4.setText("0");
        O4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                O4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                O4FocusLost(evt);
            }
        });
        O4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O4ActionPerformed(evt);
            }
        });
        O4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                O4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                O4KeyTyped(evt);
            }
        });

        Q3.setBackground(new java.awt.Color(204, 204, 204));
        Q3.setText("0");
        Q3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Q3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Q3FocusLost(evt);
            }
        });
        Q3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Q3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Q3KeyTyped(evt);
            }
        });

        O1.setBackground(new java.awt.Color(204, 204, 204));
        O1.setText("0");
        O1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                O1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                O1FocusLost(evt);
            }
        });
        O1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                O1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                O1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                O1KeyTyped(evt);
            }
        });

        Q4.setText("0");
        Q4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Q4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Q4FocusLost(evt);
            }
        });
        Q4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q4ActionPerformed(evt);
            }
        });
        Q4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Q4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Q4KeyTyped(evt);
            }
        });

        O2.setText("0");
        O2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                O2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                O2FocusLost(evt);
            }
        });
        O2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O2ActionPerformed(evt);
            }
        });
        O2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                O2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                O2KeyTyped(evt);
            }
        });

        Q5.setBackground(new java.awt.Color(204, 204, 204));
        Q5.setText("0");
        Q5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Q5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Q5FocusLost(evt);
            }
        });
        Q5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Q5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Q5KeyTyped(evt);
            }
        });

        O3.setBackground(new java.awt.Color(204, 204, 204));
        O3.setText("0");
        O3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                O3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                O3FocusLost(evt);
            }
        });
        O3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                O3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                O3KeyTyped(evt);
            }
        });

        Q6.setText("0");
        Q6.setNextFocusableComponent(R1);
        Q6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Q6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Q6FocusLost(evt);
            }
        });
        Q6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q6ActionPerformed(evt);
            }
        });
        Q6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Q6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Q6KeyTyped(evt);
            }
        });

        O5.setBackground(new java.awt.Color(204, 204, 204));
        O5.setText("0");
        O5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                O5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                O5FocusLost(evt);
            }
        });
        O5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                O5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                O5KeyTyped(evt);
            }
        });

        QT.setEditable(false);
        QT.setText("0");
        QT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QTActionPerformed(evt);
            }
        });

        O6.setText("0");
        O6.setNextFocusableComponent(P1);
        O6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                O6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                O6FocusLost(evt);
            }
        });
        O6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                O6ActionPerformed(evt);
            }
        });
        O6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                O6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                O6KeyTyped(evt);
            }
        });

        X4.setText("0");
        X4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                X4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                X4FocusLost(evt);
            }
        });
        X4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                X4ActionPerformed(evt);
            }
        });
        X4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                X4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                X4KeyTyped(evt);
            }
        });

        OT.setEditable(false);
        OT.setText("0");
        OT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OTActionPerformed(evt);
            }
        });

        X1.setBackground(new java.awt.Color(204, 204, 204));
        X1.setText("0");
        X1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                X1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                X1FocusLost(evt);
            }
        });
        X1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                X1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                X1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                X1KeyTyped(evt);
            }
        });

        P1.setBackground(new java.awt.Color(204, 204, 204));
        P1.setText("0");
        P1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                P1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                P1FocusLost(evt);
            }
        });
        P1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                P1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                P1KeyTyped(evt);
            }
        });

        X2.setText("0");
        X2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                X2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                X2FocusLost(evt);
            }
        });
        X2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                X2ActionPerformed(evt);
            }
        });
        X2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                X2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                X2KeyTyped(evt);
            }
        });

        P2.setText("0");
        P2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                P2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                P2FocusLost(evt);
            }
        });
        P2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2ActionPerformed(evt);
            }
        });
        P2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                P2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                P2KeyTyped(evt);
            }
        });

        X3.setBackground(new java.awt.Color(204, 204, 204));
        X3.setText("0");
        X3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                X3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                X3FocusLost(evt);
            }
        });
        X3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                X3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                X3KeyTyped(evt);
            }
        });

        P3.setBackground(new java.awt.Color(204, 204, 204));
        P3.setText("0");
        P3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                P3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                P3FocusLost(evt);
            }
        });
        P3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                P3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                P3KeyTyped(evt);
            }
        });

        X5.setBackground(new java.awt.Color(204, 204, 204));
        X5.setText("0");
        X5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                X5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                X5FocusLost(evt);
            }
        });
        X5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                X5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                X5KeyTyped(evt);
            }
        });

        P4.setText("0");
        P4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                P4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                P4FocusLost(evt);
            }
        });
        P4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P4ActionPerformed(evt);
            }
        });
        P4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                P4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                P4KeyTyped(evt);
            }
        });

        X6.setText("0");
        X6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                X6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                X6FocusLost(evt);
            }
        });
        X6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                X6ActionPerformed(evt);
            }
        });
        X6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                X6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                X6KeyTyped(evt);
            }
        });

        P5.setBackground(new java.awt.Color(204, 204, 204));
        P5.setText("0");
        P5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                P5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                P5FocusLost(evt);
            }
        });
        P5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                P5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                P5KeyTyped(evt);
            }
        });

        XT.setEditable(false);
        XT.setText("0");
        XT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XTActionPerformed(evt);
            }
        });

        P6.setText("0");
        P6.setNextFocusableComponent(Q1);
        P6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                P6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                P6FocusLost(evt);
            }
        });
        P6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P6ActionPerformed(evt);
            }
        });
        P6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                P6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                P6KeyTyped(evt);
            }
        });

        PT.setEditable(false);
        PT.setText("0");
        PT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PTActionPerformed(evt);
            }
        });

        W1.setBackground(new java.awt.Color(204, 204, 204));
        W1.setText("0");
        W1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                W1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                W1FocusLost(evt);
            }
        });
        W1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                W1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                W1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                W1KeyTyped(evt);
            }
        });

        W2.setText("0");
        W2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                W2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                W2FocusLost(evt);
            }
        });
        W2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                W2ActionPerformed(evt);
            }
        });
        W2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                W2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                W2KeyTyped(evt);
            }
        });

        U4.setText("0");
        U4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                U4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                U4FocusLost(evt);
            }
        });
        U4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                U4ActionPerformed(evt);
            }
        });
        U4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                U4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                U4KeyTyped(evt);
            }
        });

        W3.setBackground(new java.awt.Color(204, 204, 204));
        W3.setText("0");
        W3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                W3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                W3FocusLost(evt);
            }
        });
        W3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                W3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                W3KeyTyped(evt);
            }
        });

        N1.setBackground(new java.awt.Color(204, 204, 204));
        N1.setText("0");
        N1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                N1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                N1FocusLost(evt);
            }
        });
        N1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                N1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                N1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                N1KeyTyped(evt);
            }
        });

        N2.setText("0");
        N2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                N2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                N2FocusLost(evt);
            }
        });
        N2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                N2ActionPerformed(evt);
            }
        });
        N2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                N2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                N2KeyTyped(evt);
            }
        });

        N3.setBackground(new java.awt.Color(204, 204, 204));
        N3.setText("0");
        N3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                N3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                N3FocusLost(evt);
            }
        });
        N3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                N3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                N3KeyTyped(evt);
            }
        });

        N4.setText("0");
        N4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                N4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                N4FocusLost(evt);
            }
        });
        N4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                N4ActionPerformed(evt);
            }
        });
        N4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                N4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                N4KeyTyped(evt);
            }
        });

        N5.setBackground(new java.awt.Color(204, 204, 204));
        N5.setText("0");
        N5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                N5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                N5FocusLost(evt);
            }
        });
        N5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                N5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                N5KeyTyped(evt);
            }
        });

        N6.setText("0");
        N6.setNextFocusableComponent(O1);
        N6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                N6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                N6FocusLost(evt);
            }
        });
        N6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                N6ActionPerformed(evt);
            }
        });
        N6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                N6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                N6KeyTyped(evt);
            }
        });

        U1.setBackground(new java.awt.Color(204, 204, 204));
        U1.setText("0");
        U1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                U1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                U1FocusLost(evt);
            }
        });
        U1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                U1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                U1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                U1KeyTyped(evt);
            }
        });

        W4.setText("0");
        W4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                W4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                W4FocusLost(evt);
            }
        });
        W4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                W4ActionPerformed(evt);
            }
        });
        W4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                W4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                W4KeyTyped(evt);
            }
        });

        U2.setText("0");
        U2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                U2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                U2FocusLost(evt);
            }
        });
        U2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                U2ActionPerformed(evt);
            }
        });
        U2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                U2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                U2KeyTyped(evt);
            }
        });

        W5.setBackground(new java.awt.Color(204, 204, 204));
        W5.setText("0");
        W5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                W5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                W5FocusLost(evt);
            }
        });
        W5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                W5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                W5KeyTyped(evt);
            }
        });

        U3.setBackground(new java.awt.Color(204, 204, 204));
        U3.setText("0");
        U3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                U3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                U3FocusLost(evt);
            }
        });
        U3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                U3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                U3KeyTyped(evt);
            }
        });

        W6.setText("0");
        W6.setNextFocusableComponent(X1);
        W6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                W6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                W6FocusLost(evt);
            }
        });
        W6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                W6ActionPerformed(evt);
            }
        });
        W6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                W6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                W6KeyTyped(evt);
            }
        });

        U5.setBackground(new java.awt.Color(204, 204, 204));
        U5.setText("0");
        U5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                U5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                U5FocusLost(evt);
            }
        });
        U5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                U5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                U5KeyTyped(evt);
            }
        });

        WT.setEditable(false);
        WT.setText("0");
        WT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WTActionPerformed(evt);
            }
        });

        U6.setText("0");
        U6.setNextFocusableComponent(V1);
        U6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                U6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                U6FocusLost(evt);
            }
        });
        U6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                U6ActionPerformed(evt);
            }
        });
        U6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                U6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                U6KeyTyped(evt);
            }
        });

        UT.setEditable(false);
        UT.setText("0");
        UT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UTActionPerformed(evt);
            }
        });

        V1.setBackground(new java.awt.Color(204, 204, 204));
        V1.setText("0");
        V1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                V1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                V1FocusLost(evt);
            }
        });
        V1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                V1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                V1KeyTyped(evt);
            }
        });

        V2.setText("0");
        V2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                V2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                V2FocusLost(evt);
            }
        });
        V2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                V2ActionPerformed(evt);
            }
        });
        V2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                V2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                V2KeyTyped(evt);
            }
        });

        V3.setBackground(new java.awt.Color(204, 204, 204));
        V3.setText("0");
        V3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                V3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                V3FocusLost(evt);
            }
        });
        V3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                V3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                V3KeyTyped(evt);
            }
        });

        V4.setText("0");
        V4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                V4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                V4FocusLost(evt);
            }
        });
        V4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                V4ActionPerformed(evt);
            }
        });
        V4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                V4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                V4KeyTyped(evt);
            }
        });

        V5.setBackground(new java.awt.Color(204, 204, 204));
        V5.setText("0");
        V5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                V5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                V5FocusLost(evt);
            }
        });
        V5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                V5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                V5KeyTyped(evt);
            }
        });

        V6.setText("0");
        V6.setNextFocusableComponent(W1);
        V6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                V6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                V6FocusLost(evt);
            }
        });
        V6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                V6ActionPerformed(evt);
            }
        });
        V6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                V6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                V6KeyTyped(evt);
            }
        });

        VT.setEditable(false);
        VT.setText("0");
        VT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VTActionPerformed(evt);
            }
        });

        T1.setBackground(new java.awt.Color(204, 204, 204));
        T1.setText("0");
        T1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                T1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                T1FocusLost(evt);
            }
        });
        T1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                T1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                T1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                T1KeyTyped(evt);
            }
        });

        T2.setText("0");
        T2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                T2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                T2FocusLost(evt);
            }
        });
        T2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T2ActionPerformed(evt);
            }
        });
        T2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                T2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                T2KeyTyped(evt);
            }
        });

        T3.setBackground(new java.awt.Color(204, 204, 204));
        T3.setText("0");
        T3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                T3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                T3FocusLost(evt);
            }
        });
        T3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                T3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                T3KeyTyped(evt);
            }
        });

        T4.setText("0");
        T4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                T4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                T4FocusLost(evt);
            }
        });
        T4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T4ActionPerformed(evt);
            }
        });
        T4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                T4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                T4KeyTyped(evt);
            }
        });

        T5.setBackground(new java.awt.Color(204, 204, 204));
        T5.setText("0");
        T5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                T5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                T5FocusLost(evt);
            }
        });
        T5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                T5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                T5KeyTyped(evt);
            }
        });

        T6.setText("0");
        T6.setNextFocusableComponent(U1);
        T6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                T6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                T6FocusLost(evt);
            }
        });
        T6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T6ActionPerformed(evt);
            }
        });
        T6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                T6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                T6KeyTyped(evt);
            }
        });

        TT.setEditable(false);
        TT.setText("0");
        TT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TTActionPerformed(evt);
            }
        });

        NT.setEditable(false);
        NT.setText("0");
        NT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NTActionPerformed(evt);
            }
        });

        jLabel49.setText("granos");

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(255, 0, 0));
        jLabel56.setText("*");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(G1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(G2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(G3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(G4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(G5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(G6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(E1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(E2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(E3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(E4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(E5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(E6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(F1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(F2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(F3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(F4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(F5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(F6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(GT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ET, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(FT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(M1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(M2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(M3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(M4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(M5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(M6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(K1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(K2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(K3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(K4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(K5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(L1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(L2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(L3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(L4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(L5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(L6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(MT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(KT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(LT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(K6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(J1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(J2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(J3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(J4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(J5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(J6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(H1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(H2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(H3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(H4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(H5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(H6))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(I1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(I2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(I3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(I4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(I5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(I6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(JT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(HT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(IT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(S1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(S2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(S3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(S4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(S5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(S6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Q1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Q2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Q3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Q4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Q5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(R1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(R2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(R3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(R4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(R5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(R6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(ST, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(QT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(RT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(X1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(X2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(X3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(X4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(X5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(X6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(W1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(W2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(W3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(W4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(W5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(W6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(WT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(XT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(V1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(V2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(V3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(V4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(V5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(V6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(U1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(U2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(U3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(U4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(U5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(U6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(T1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(T2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(T3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(T4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(T5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(T6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(VT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(TT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(UT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Q6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(P1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(P2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(P3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(P4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(P5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(P6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(N1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(N2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(N3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(N4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(N5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(N6))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(O1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(O2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(O3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(O4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(O5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(O6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(PT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(NT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(OT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel31))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(D1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(D2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(D3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(D4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(D5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(D6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(B1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(B2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(B3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(B4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(B5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(B6))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel25)
                                        .addComponent(A1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel26)
                                        .addComponent(A2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel27)
                                        .addComponent(A3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel28)
                                        .addComponent(A4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel29)
                                        .addComponent(A5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel30)
                                        .addComponent(A6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(C1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(C2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(C3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(C4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(C5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(C6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(DT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(8, 8, 8)
                                    .addComponent(jLabel32))
                                .addComponent(AT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(BT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel56)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel49)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator4))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(A1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(A2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(A3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(A4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(A5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(A6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(AT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel56)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(B1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(B2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(B3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(B4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(B5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(B6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(C1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(C2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(C3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(C4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(C5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(C6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(D2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(D1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(D3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(D4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(D5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(D6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ET, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(E1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(E2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(E3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(E4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(E5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(E6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(F1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(F2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(F3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(F4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(F5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(F6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(G2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(G1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(G3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(G4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(G5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(G6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(83, 83, 83)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(HT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(H1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(H2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(H3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(H4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(H5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(H6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(I1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(I2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(I3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(I4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(I5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(I6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(J2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(J1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(J3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(J4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(J5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(J6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(KT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(K1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(K2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(K3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(K4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(K5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(K6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(L1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(L2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(L3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(L4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(L5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(L6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(M2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(M1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(M3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(M4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(M5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(M6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(NT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(N1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(N2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(N3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(N4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(N5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(N6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(O1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(O2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(O3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(O4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(O5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(O6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(P2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(P1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(P3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(P4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(P5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(P6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(QT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Q1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Q2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Q3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Q4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Q5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Q6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(R1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(S2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(S1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(S3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(S4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(S5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(S6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(VT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(T1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(T2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(T3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(T4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(T5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(T6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(U1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(U2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(U3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(U4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(U5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(U6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(V2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(V1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(V3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(V4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(V5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(V6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(WT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(XT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(W1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(W2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(W3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(W4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(W5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(W6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(X1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(X2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(X3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(X4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(X5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(X6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void A2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A2ActionPerformed

    }//GEN-LAST:event_A2ActionPerformed
    private void A4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_A4ActionPerformed
    private void A6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_A6ActionPerformed
    private void B2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B2ActionPerformed
    private void B4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B4ActionPerformed
    private void B6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B6ActionPerformed
    private void ATActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ATActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ATActionPerformed
    private void BTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BTActionPerformed
    private void humedadcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_humedadcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_humedadcActionPerformed
    private void PesoEvKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PesoEvKeyTyped
        char c = evt.getKeyChar();//Validacion para evitar que se escriban letras en estos tampos
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_PesoEvKeyTyped
    private void humedadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_humedadoKeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_humedadoKeyTyped
    private void humedadcKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_humedadcKeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_humedadcKeyTyped
    private void A1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_A1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_A1KeyTyped
    private void A2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_A2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_A2KeyTyped
    private void A3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_A3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_A3KeyTyped
    private void A4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_A4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_A4KeyTyped
    private void A5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_A5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_A5KeyTyped
    private void A6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_A6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();

        }
    }//GEN-LAST:event_A6KeyTyped
    private void CsmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CsmActionPerformed

    }//GEN-LAST:event_CsmActionPerformed
    private void calcereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcereActionPerformed

    }//GEN-LAST:event_calcereActionPerformed
    private void FormaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormaActionPerformed

    }//GEN-LAST:event_FormaActionPerformed
    private void A1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_A1KeyReleased
        suma(1);

    }//GEN-LAST:event_A1KeyReleased
    private void A2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_A2KeyReleased
        suma(1);
    }//GEN-LAST:event_A2KeyReleased
    private void A3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_A3KeyReleased
        suma(1);
    }//GEN-LAST:event_A3KeyReleased
    private void A4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_A4KeyReleased
        suma(1);
    }//GEN-LAST:event_A4KeyReleased
    private void A5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_A5KeyReleased
        suma(1);
    }//GEN-LAST:event_A5KeyReleased
    private void A6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_A6KeyReleased
        suma(1);
    }//GEN-LAST:event_A6KeyReleased
    private void A1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_A1FocusLost
        if (A1.getText().equals("")) {
            A1.setText("0");
        }
        suma(1);
    }//GEN-LAST:event_A1FocusLost
    private void A2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_A2FocusLost
        if (A2.getText().equals("")) { //validacion para que si queda vacio el campo se llene con 0
            A2.setText("0");
        }
        suma(1); //se realiza la suma cuando se quita el focus al campo
    }//GEN-LAST:event_A2FocusLost
    private void A3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_A3FocusLost
        if (A3.getText().equals("")) {
            A3.setText("0");
        }
    }//GEN-LAST:event_A3FocusLost
    private void A4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_A4FocusGained
        if (A4.getText().equals("0")) {
            A4.setText("");
        }
    }//GEN-LAST:event_A4FocusGained
    private void A5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_A5FocusLost
        if (A5.getText().equals("")) {
            A5.setText("0");
        }
        suma(1);
    }//GEN-LAST:event_A5FocusLost
    private void A6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_A6FocusLost
        if (A6.getText().equals("")) {
            A6.setText("0");
        }
        suma(1);
    }//GEN-LAST:event_A6FocusLost
    private void A1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_A1FocusGained
        if (A1.getText().equals("0")) { //si el campo esta en 0 se pone en blanco para mayor eficacia 
            A1.setText("");
        };
    }//GEN-LAST:event_A1FocusGained
    private void A4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_A4FocusLost
        if (A4.getText().equals("")) {
            A4.setText("0");
        }
        suma(1);
    }//GEN-LAST:event_A4FocusLost
    private void A2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_A2FocusGained
        if (A2.getText().equals("0")) {
            A2.setText("");
        }
    }//GEN-LAST:event_A2FocusGained
    private void A3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_A3FocusGained
        if (A3.getText().equals("0")) {
            A3.setText("");
        }
    }//GEN-LAST:event_A3FocusGained
    private void A5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_A5FocusGained
        if (A5.getText().equals("0")) {
            A5.setText("");
        }
    }//GEN-LAST:event_A5FocusGained
    private void A6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_A6FocusGained
        if (A6.getText().equals("0")) {
            A6.setText("");
        }
    }//GEN-LAST:event_A6FocusGained
    private void B1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_B1KeyPressed

    }//GEN-LAST:event_B1KeyPressed
    private void B2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_B2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_B2KeyTyped
    private void B3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_B3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_B3KeyTyped
    private void B4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_B4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_B4KeyTyped
    private void B5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_B5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_B5KeyTyped
    private void B6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_B6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_B6KeyTyped
    private void B1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_B1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_B1KeyTyped
    private void B1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_B1KeyReleased
        suma(2);
    }//GEN-LAST:event_B1KeyReleased
    private void B2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_B2KeyReleased
        suma(2);
    }//GEN-LAST:event_B2KeyReleased
    private void B3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_B3KeyReleased
        suma(2);
    }//GEN-LAST:event_B3KeyReleased
    private void B4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_B4KeyReleased
        suma(2);
    }//GEN-LAST:event_B4KeyReleased
    private void B5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_B5KeyReleased
        suma(2);
    }//GEN-LAST:event_B5KeyReleased
    private void B6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_B6KeyReleased
        suma(2);
    }//GEN-LAST:event_B6KeyReleased
    private void B1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_B1FocusGained
        if (B1.getText().equals("0")) {
            B1.setText("");
        }
    }//GEN-LAST:event_B1FocusGained
    private void B2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_B2FocusGained
        if (B2.getText().equals("0")) {
            B2.setText("");
        }
    }//GEN-LAST:event_B2FocusGained
    private void B3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_B3FocusGained
        if (B3.getText().equals("0")) {
            B3.setText("");
        }            // TODO add your handling code here:
    }//GEN-LAST:event_B3FocusGained
    private void B4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_B4FocusGained
        if (B4.getText().equals("0")) {
            B4.setText("");
        }            // TODO add your handling code here:
    }//GEN-LAST:event_B4FocusGained
    private void B5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_B5FocusGained
        if (B5.getText().equals("0")) {
            B5.setText("");
        }
    }//GEN-LAST:event_B5FocusGained
    private void B6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_B6FocusGained
        if (B6.getText().equals("0")) {
            B6.setText("");
        }
    }//GEN-LAST:event_B6FocusGained
    private void B1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_B1FocusLost
        if (B1.getText().equals("")) {
            B1.setText("0");
        }
        suma(2);
    }//GEN-LAST:event_B1FocusLost
    private void B2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_B2FocusLost
        if (B2.getText().equals("")) {
            B2.setText("0");
        }
        suma(2);
    }//GEN-LAST:event_B2FocusLost
    private void B3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_B3FocusLost
        if (B3.getText().equals("")) {
            B3.setText("0");
        }
        suma(2);
    }//GEN-LAST:event_B3FocusLost
    private void B4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_B4FocusLost
        if (B4.getText().equals("")) {
            B4.setText("0");
        }
        suma(2);
    }//GEN-LAST:event_B4FocusLost
    private void B5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_B5FocusLost
        if (B5.getText().equals("")) {
            B5.setText("0");
        }
        suma(2);
    }//GEN-LAST:event_B5FocusLost
    private void B6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_B6FocusLost
        if (B6.getText().equals("")) {
            B6.setText("0");
            suma(2);
        }
    }//GEN-LAST:event_B6FocusLost
    private void C4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_C4FocusGained
        if (C4.getText().equals("0")) {
            C4.setText("");
        }
    }//GEN-LAST:event_C4FocusGained
    private void C4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_C4FocusLost
        if (C4.getText().equals("")) {
            C4.setText("0");
        }
        suma(3);
    }//GEN-LAST:event_C4FocusLost
    private void C4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C4ActionPerformed

    }//GEN-LAST:event_C4ActionPerformed
    private void C4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_C4KeyReleased
        suma(3);
    }//GEN-LAST:event_C4KeyReleased
    private void C4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_C4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_C4KeyTyped
    private void C1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_C1FocusGained
        if (C1.getText().equals("0")) {
            C1.setText("");
        }
    }//GEN-LAST:event_C1FocusGained
    private void C1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_C1FocusLost
        if (C1.getText().equals("")) {
            C1.setText("0");
        }
        suma(3);
    }//GEN-LAST:event_C1FocusLost
    private void C1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_C1KeyPressed

    }//GEN-LAST:event_C1KeyPressed
    private void C1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_C1KeyReleased
        suma(3);
    }//GEN-LAST:event_C1KeyReleased
    private void C1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_C1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_C1KeyTyped
    private void C2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_C2FocusGained
        if (C2.getText().equals("0")) {
            C2.setText("");
        }
    }//GEN-LAST:event_C2FocusGained
    private void C2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_C2FocusLost
        if (C2.getText().equals("")) {
            C2.setText("0");
        }
        suma(3);
    }//GEN-LAST:event_C2FocusLost
    private void C2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C2ActionPerformed

    }//GEN-LAST:event_C2ActionPerformed
    private void C2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_C2KeyReleased
        suma(3);
    }//GEN-LAST:event_C2KeyReleased
    private void C2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_C2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }      // TODO add your handling code here:
    }//GEN-LAST:event_C2KeyTyped
    private void C3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_C3FocusGained
        if (C3.getText().equals("0")) {
            C3.setText("");
        }
    }//GEN-LAST:event_C3FocusGained
    private void C3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_C3FocusLost
        if (C3.getText().equals("")) {
            C3.setText("0");
        }
        suma(3);
    }//GEN-LAST:event_C3FocusLost
    private void C3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_C3KeyReleased
        suma(3);
    }//GEN-LAST:event_C3KeyReleased
    private void C3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_C3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_C3KeyTyped
    private void C5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_C5FocusGained
        if (C5.getText().equals("0")) {
            C5.setText("");
        }
    }//GEN-LAST:event_C5FocusGained
    private void C5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_C5FocusLost
        if (C5.getText().equals("")) {
            C5.setText("0");
        }
        suma(3);
    }//GEN-LAST:event_C5FocusLost
    private void C5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_C5KeyReleased
        suma(3);
    }//GEN-LAST:event_C5KeyReleased
    private void C5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_C5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_C5KeyTyped
    private void C6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_C6FocusGained
        if (C6.getText().equals("0")) {
            C6.setText("");
        }
    }//GEN-LAST:event_C6FocusGained
    private void C6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_C6FocusLost
        if (C6.getText().equals("")) {
            C6.setText("0");
        }
        suma(3);
    }//GEN-LAST:event_C6FocusLost
    private void C6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C6ActionPerformed

    }//GEN-LAST:event_C6ActionPerformed
    private void C6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_C6KeyReleased
        suma(3);
    }//GEN-LAST:event_C6KeyReleased
    private void C6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_C6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_C6KeyTyped
    private void CTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CTActionPerformed

    }//GEN-LAST:event_CTActionPerformed
    private void D1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_D1FocusGained
        if (D1.getText().equals("0")) {
            D1.setText("");
        }
    }//GEN-LAST:event_D1FocusGained
    private void D1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_D1FocusLost
        if (D1.getText().equals("")) {
            D1.setText("0");
        }
        suma(4);
    }//GEN-LAST:event_D1FocusLost
    private void D1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_D1KeyReleased
        suma(4);
    }//GEN-LAST:event_D1KeyReleased
    private void D1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_D1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_D1KeyTyped
    private void D2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_D2FocusGained
        if (D2.getText().equals("0")) {
            D2.setText("");
        }
    }//GEN-LAST:event_D2FocusGained
    private void D2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_D2FocusLost
        if (D2.getText().equals("")) {
            D2.setText("0");
        }
        suma(4);
    }//GEN-LAST:event_D2FocusLost
    private void D2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D2ActionPerformed

    }//GEN-LAST:event_D2ActionPerformed
    private void D2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_D2KeyReleased
        suma(4);
    }//GEN-LAST:event_D2KeyReleased
    private void D2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_D2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_D2KeyTyped
    private void D3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_D3FocusGained
        if (D3.getText().equals("0")) {
            D3.setText("");
        }
    }//GEN-LAST:event_D3FocusGained
    private void D3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_D3FocusLost
        if (D3.getText().equals("")) {
            D3.setText("0");
        }
        suma(4);
    }//GEN-LAST:event_D3FocusLost
    private void D3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_D3KeyReleased
        suma(4);
    }//GEN-LAST:event_D3KeyReleased
    private void D3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_D3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_D3KeyTyped
    private void D4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_D4FocusGained
        if (D4.getText().equals("0")) {
            D4.setText("");
        }
    }//GEN-LAST:event_D4FocusGained
    private void D4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_D4FocusLost
        if (D4.getText().equals("")) {
            D4.setText("0");
        }
        suma(4);
    }//GEN-LAST:event_D4FocusLost
    private void D4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D4ActionPerformed

    }//GEN-LAST:event_D4ActionPerformed
    private void D4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_D4KeyReleased
        suma(4);
    }//GEN-LAST:event_D4KeyReleased
    private void D4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_D4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_D4KeyTyped
    private void D5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_D5FocusGained
        if (D5.getText().equals("0")) {
            D5.setText("");
        }
    }//GEN-LAST:event_D5FocusGained
    private void D5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_D5FocusLost
        if (D5.getText().equals("")) {
            D5.setText("0");
        }
        suma(4);
    }//GEN-LAST:event_D5FocusLost
    private void D5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_D5KeyReleased
        suma(4);
    }//GEN-LAST:event_D5KeyReleased
    private void D5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_D5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_D5KeyTyped
    private void D6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_D6FocusGained
        if (D6.getText().equals("0")) {
            D6.setText("");
        } // TODO add your handling code here:
    }//GEN-LAST:event_D6FocusGained
    private void D6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_D6FocusLost
        if (D6.getText().equals("")) {
            D6.setText("0");
        }
        suma(4);
    }//GEN-LAST:event_D6FocusLost
    private void D6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D6ActionPerformed

    }//GEN-LAST:event_D6ActionPerformed
    private void D6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_D6KeyReleased
        suma(4);
    }//GEN-LAST:event_D6KeyReleased
    private void D6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_D6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_D6KeyTyped
    private void DTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DTActionPerformed
    private void F4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_F4FocusGained
        if (F4.getText().equals("0")) {
            F4.setText("");
        }
    }//GEN-LAST:event_F4FocusGained
    private void F4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_F4FocusLost
        if (F4.getText().equals("")) {
            F4.setText("0");
        }
        suma(6);
    }//GEN-LAST:event_F4FocusLost
    private void F4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F4ActionPerformed

    }//GEN-LAST:event_F4ActionPerformed
    private void F4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_F4KeyReleased
        suma(6);
    }//GEN-LAST:event_F4KeyReleased
    private void F4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_F4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_F4KeyTyped
    private void F1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_F1FocusGained
        if (F1.getText().equals("0")) {
            F1.setText("");
        }
    }//GEN-LAST:event_F1FocusGained
    private void F1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_F1FocusLost
        if (F1.getText().equals("")) {
            F1.setText("0");
        }
        suma(6);
    }//GEN-LAST:event_F1FocusLost
    private void F1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_F1KeyPressed

    }//GEN-LAST:event_F1KeyPressed
    private void F1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_F1KeyReleased
        suma(6);
    }//GEN-LAST:event_F1KeyReleased
    private void F1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_F1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_F1KeyTyped
    private void F2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_F2FocusGained
        if (F2.getText().equals("0")) {
            F2.setText("");
        }
    }//GEN-LAST:event_F2FocusGained
    private void F2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_F2FocusLost
        if (F2.getText().equals("")) {
            F2.setText("0");
        }
        suma(6);
    }//GEN-LAST:event_F2FocusLost
    private void F2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F2ActionPerformed

    }//GEN-LAST:event_F2ActionPerformed
    private void F2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_F2KeyReleased
        suma(6);
    }//GEN-LAST:event_F2KeyReleased
    private void F2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_F2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_F2KeyTyped
    private void F3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_F3FocusGained
        if (F3.getText().equals("0")) {
            F3.setText("");
        }
    }//GEN-LAST:event_F3FocusGained
    private void F3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_F3FocusLost
        if (F3.getText().equals("")) {
            F3.setText("0");
        }
        suma(6);
    }//GEN-LAST:event_F3FocusLost
    private void F3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_F3KeyReleased
        suma(6);
    }//GEN-LAST:event_F3KeyReleased
    private void F3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_F3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_F3KeyTyped
    private void F5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_F5FocusGained
        if (F5.getText().equals("0")) {
            F5.setText("");
        }
    }//GEN-LAST:event_F5FocusGained
    private void F5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_F5FocusLost
        if (F5.getText().equals("")) {
            F5.setText("0");
        }
        suma(6);
    }//GEN-LAST:event_F5FocusLost
    private void F5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_F5KeyReleased
        suma(6);
    }//GEN-LAST:event_F5KeyReleased
    private void F5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_F5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_F5KeyTyped
    private void F6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_F6FocusGained
        if (F6.getText().equals("0")) {
            F6.setText("");
        }
    }//GEN-LAST:event_F6FocusGained
    private void F6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_F6FocusLost
        if (F6.getText().equals("")) {
            F6.setText("0");
        }
        suma(6);
    }//GEN-LAST:event_F6FocusLost
    private void F6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F6ActionPerformed

    }//GEN-LAST:event_F6ActionPerformed
    private void F6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_F6KeyReleased
        suma(6);
    }//GEN-LAST:event_F6KeyReleased
    private void F6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_F6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_F6KeyTyped
    private void FTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FTActionPerformed

    }//GEN-LAST:event_FTActionPerformed
    private void G1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_G1FocusGained
        if (G1.getText().equals("0")) {
            G1.setText("");
        }
    }//GEN-LAST:event_G1FocusGained
    private void G1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_G1FocusLost
        if (G1.getText().equals("")) {
            G1.setText("0");
        }
        suma(7);
    }//GEN-LAST:event_G1FocusLost
    private void G1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_G1KeyReleased
        suma(7);
    }//GEN-LAST:event_G1KeyReleased
    private void G1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_G1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_G1KeyTyped
    private void G2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_G2FocusGained
        if (G2.getText().equals("0")) {
            G2.setText("");
        }
    }//GEN-LAST:event_G2FocusGained
    private void G2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_G2FocusLost
        if (G2.getText().equals("")) {
            G2.setText("0");
        }
        suma(7);
    }//GEN-LAST:event_G2FocusLost
    private void G2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G2ActionPerformed

    }//GEN-LAST:event_G2ActionPerformed
    private void G2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_G2KeyReleased
        suma(7);
    }//GEN-LAST:event_G2KeyReleased
    private void G2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_G2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_G2KeyTyped
    private void G3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_G3FocusGained
        if (G3.getText().equals("0")) {
            G3.setText("");
        }
    }//GEN-LAST:event_G3FocusGained
    private void G3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_G3FocusLost
        if (G3.getText().equals("")) {
            G3.setText("0");
        }
        suma(7);
    }//GEN-LAST:event_G3FocusLost
    private void G3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_G3KeyReleased
        suma(7);
    }//GEN-LAST:event_G3KeyReleased
    private void G3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_G3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_G3KeyTyped
    private void G4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_G4FocusGained
        if (G4.getText().equals("0")) {
            G4.setText("");
        }
    }//GEN-LAST:event_G4FocusGained
    private void G4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_G4FocusLost
        if (G4.getText().equals("")) {
            G4.setText("0");
        }
        suma(7);
    }//GEN-LAST:event_G4FocusLost
    private void G4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G4ActionPerformed

    }//GEN-LAST:event_G4ActionPerformed
    private void G4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_G4KeyReleased
        suma(7);
    }//GEN-LAST:event_G4KeyReleased
    private void G4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_G4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_G4KeyTyped
    private void G5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_G5FocusGained
        if (G5.getText().equals("0")) {
            G5.setText("");
        }
    }//GEN-LAST:event_G5FocusGained
    private void G5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_G5FocusLost
        if (G5.getText().equals("")) {
            G5.setText("0");
        }
        suma(7);
    }//GEN-LAST:event_G5FocusLost
    private void G5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_G5KeyReleased
        suma(7);
    }//GEN-LAST:event_G5KeyReleased
    private void G5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_G5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_G5KeyTyped
    private void G6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_G6FocusGained
        if (G6.getText().equals("0")) {
            G6.setText("");
        }
    }//GEN-LAST:event_G6FocusGained
    private void G6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_G6FocusLost
        if (G6.getText().equals("")) {
            G6.setText("0");
        }
        suma(7);
    }//GEN-LAST:event_G6FocusLost
    private void G6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G6ActionPerformed

    }//GEN-LAST:event_G6ActionPerformed
    private void G6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_G6KeyReleased
        suma(7);
    }//GEN-LAST:event_G6KeyReleased
    private void G6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_G6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_G6KeyTyped
    private void GTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GTActionPerformed

    }//GEN-LAST:event_GTActionPerformed
    private void E1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_E1FocusGained
        if (E1.getText().equals("0")) {
            E1.setText("");
        }
    }//GEN-LAST:event_E1FocusGained
    private void E1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_E1FocusLost
        if (E1.getText().equals("")) {
            E1.setText("0");
        }
        suma(5);
    }//GEN-LAST:event_E1FocusLost
    private void E1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_E1KeyPressed

    }//GEN-LAST:event_E1KeyPressed
    private void E1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_E1KeyReleased
        suma(5);
    }//GEN-LAST:event_E1KeyReleased
    private void E1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_E1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_E1KeyTyped
    private void E2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_E2FocusGained
        if (E2.getText().equals("0")) {
            E2.setText("");
        }
    }//GEN-LAST:event_E2FocusGained
    private void E2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_E2FocusLost
        if (E2.getText().equals("")) {
            E2.setText("0");
        }
        suma(5);
    }//GEN-LAST:event_E2FocusLost
    private void E2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E2ActionPerformed

    }//GEN-LAST:event_E2ActionPerformed
    private void E2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_E2KeyReleased
        suma(5);
    }//GEN-LAST:event_E2KeyReleased
    private void E2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_E2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_E2KeyTyped
    private void E3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_E3FocusGained
        if (E3.getText().equals("0")) {
            E3.setText("");
        }
    }//GEN-LAST:event_E3FocusGained
    private void E3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_E3FocusLost
        if (E3.getText().equals("")) {
            E3.setText("0");
        }
        suma(5);
    }//GEN-LAST:event_E3FocusLost
    private void E3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_E3KeyReleased
        suma(5);
    }//GEN-LAST:event_E3KeyReleased
    private void E3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_E3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_E3KeyTyped
    private void E4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_E4FocusGained
        if (E4.getText().equals("0")) {
            E4.setText("");
        }
    }//GEN-LAST:event_E4FocusGained
    private void E4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_E4FocusLost
        if (E4.getText().equals("")) {
            E4.setText("0");
        }
        suma(5);
    }//GEN-LAST:event_E4FocusLost
    private void E4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E4ActionPerformed

    }//GEN-LAST:event_E4ActionPerformed
    private void E4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_E4KeyReleased
        suma(5);
    }//GEN-LAST:event_E4KeyReleased
    private void E4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_E4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_E4KeyTyped
    private void E5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_E5FocusGained
        if (E5.getText().equals("0")) {
            E5.setText("");
        }
    }//GEN-LAST:event_E5FocusGained
    private void E5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_E5FocusLost
        if (E5.getText().equals("")) {
            E5.setText("0");
        }
        suma(5);
    }//GEN-LAST:event_E5FocusLost
    private void E5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_E5KeyReleased
        suma(5);
    }//GEN-LAST:event_E5KeyReleased
    private void E5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_E5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_E5KeyTyped
    private void E6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_E6FocusGained
        if (E6.getText().equals("0")) {
            E6.setText("");
        }
    }//GEN-LAST:event_E6FocusGained
    private void E6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_E6FocusLost
        if (E6.getText().equals("")) {
            E6.setText("0");
        }
        suma(5);
    }//GEN-LAST:event_E6FocusLost
    private void E6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E6ActionPerformed

    }//GEN-LAST:event_E6ActionPerformed
    private void E6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_E6KeyReleased
        suma(5);
    }//GEN-LAST:event_E6KeyReleased
    private void E6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_E6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_E6KeyTyped
    private void ETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ETActionPerformed

    }//GEN-LAST:event_ETActionPerformed
    private void L4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_L4FocusGained
        if (L4.getText().equals("0")) {
            L4.setText("");
        }
    }//GEN-LAST:event_L4FocusGained
    private void L4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_L4FocusLost
        if (L4.getText().equals("")) {
            L4.setText("0");
        }
        suma(12);
    }//GEN-LAST:event_L4FocusLost
    private void L4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L4ActionPerformed

    }//GEN-LAST:event_L4ActionPerformed
    private void L4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_L4KeyReleased
        suma(12);
    }//GEN-LAST:event_L4KeyReleased
    private void L4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_L4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_L4KeyTyped
    private void L1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_L1FocusGained
        if (L1.getText().equals("0")) {
            L1.setText("");
        }
    }//GEN-LAST:event_L1FocusGained
    private void L1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_L1FocusLost
        if (L1.getText().equals("")) {
            L1.setText("0");
        }
        suma(12);
    }//GEN-LAST:event_L1FocusLost
    private void L1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_L1KeyPressed

    }//GEN-LAST:event_L1KeyPressed
    private void L1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_L1KeyReleased
        suma(12);
    }//GEN-LAST:event_L1KeyReleased
    private void L1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_L1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_L1KeyTyped
    private void L2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_L2FocusGained
        if (L2.getText().equals("0")) {
            L2.setText("");
        }
    }//GEN-LAST:event_L2FocusGained
    private void L2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_L2FocusLost
        if (L2.getText().equals("")) {
            L2.setText("0");
        }
        suma(12);
    }//GEN-LAST:event_L2FocusLost
    private void L2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L2ActionPerformed

    }//GEN-LAST:event_L2ActionPerformed
    private void L2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_L2KeyReleased
        suma(12);
    }//GEN-LAST:event_L2KeyReleased
    private void L2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_L2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_L2KeyTyped
    private void L3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_L3FocusGained
        if (L3.getText().equals("0")) {
            L3.setText("");
        }
    }//GEN-LAST:event_L3FocusGained
    private void L3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_L3FocusLost
        if (L3.getText().equals("")) {
            L3.setText("0");
        }
        suma(12);
    }//GEN-LAST:event_L3FocusLost
    private void L3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_L3KeyReleased
        suma(12);
    }//GEN-LAST:event_L3KeyReleased
    private void L3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_L3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_L3KeyTyped
    private void L5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_L5FocusGained
        if (L5.getText().equals("0")) {
            L5.setText("");
        }
    }//GEN-LAST:event_L5FocusGained
    private void L5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_L5FocusLost
        if (L5.getText().equals("")) {
            L5.setText("0");
        }
        suma(12);
    }//GEN-LAST:event_L5FocusLost
    private void L5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_L5KeyReleased
        suma(12);
    }//GEN-LAST:event_L5KeyReleased
    private void L5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_L5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_L5KeyTyped
    private void L6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_L6FocusGained
        if (L6.getText().equals("0")) {
            L6.setText("");
        }
    }//GEN-LAST:event_L6FocusGained
    private void L6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_L6FocusLost
        if (L6.getText().equals("")) {
            L6.setText("0");
        }
        suma(12);
    }//GEN-LAST:event_L6FocusLost
    private void L6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L6ActionPerformed

    }//GEN-LAST:event_L6ActionPerformed
    private void L6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_L6KeyReleased
        suma(12);
    }//GEN-LAST:event_L6KeyReleased
    private void L6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_L6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_L6KeyTyped
    private void LTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LTActionPerformed
    private void M1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_M1FocusGained
        if (M1.getText().equals("0")) {
            M1.setText("");
        }
    }//GEN-LAST:event_M1FocusGained
    private void M1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_M1FocusLost
        if (M1.getText().equals("")) {
            M1.setText("0");
        }
        suma(13);
    }//GEN-LAST:event_M1FocusLost
    private void M1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_M1KeyReleased
        suma(13);
    }//GEN-LAST:event_M1KeyReleased
    private void M1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_M1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_M1KeyTyped
    private void M2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_M2FocusGained
        if (M2.getText().equals("0")) {
            M2.setText("");
        }
    }//GEN-LAST:event_M2FocusGained
    private void M2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_M2FocusLost
        if (M2.getText().equals("")) {
            M2.setText("0");
        }
        suma(13);
    }//GEN-LAST:event_M2FocusLost
    private void M2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M2ActionPerformed

    }//GEN-LAST:event_M2ActionPerformed
    private void M2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_M2KeyReleased
        suma(13);
    }//GEN-LAST:event_M2KeyReleased
    private void M2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_M2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_M2KeyTyped
    private void M3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_M3FocusGained
        if (M3.getText().equals("0")) {
            M3.setText("");
        }
    }//GEN-LAST:event_M3FocusGained
    private void M3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_M3FocusLost
        if (M3.getText().equals("")) {
            M3.setText("0");
        }
        suma(13);
    }//GEN-LAST:event_M3FocusLost
    private void M3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_M3KeyReleased
        suma(13);
    }//GEN-LAST:event_M3KeyReleased
    private void M3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_M3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_M3KeyTyped
    private void M4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_M4FocusGained
        if (M4.getText().equals("0")) {
            M4.setText("");
        }
    }//GEN-LAST:event_M4FocusGained
    private void M4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_M4FocusLost
        if (M4.getText().equals("")) {
            M4.setText("0");
        }
        suma(13);
    }//GEN-LAST:event_M4FocusLost
    private void M4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M4ActionPerformed

    }//GEN-LAST:event_M4ActionPerformed
    private void M4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_M4KeyReleased
        suma(13);
    }//GEN-LAST:event_M4KeyReleased
    private void M4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_M4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_M4KeyTyped
    private void M5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_M5FocusGained
        if (M5.getText().equals("0")) {
            M5.setText("");
        }
    }//GEN-LAST:event_M5FocusGained
    private void M5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_M5FocusLost
        if (M5.getText().equals("")) {
            M5.setText("0");
        }
        suma(13);
    }//GEN-LAST:event_M5FocusLost
    private void M5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_M5KeyReleased
        suma(13);
    }//GEN-LAST:event_M5KeyReleased
    private void M5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_M5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_M5KeyTyped
    private void M6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_M6FocusGained
        if (M6.getText().equals("0")) {
            M6.setText("");
        }
    }//GEN-LAST:event_M6FocusGained
    private void M6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_M6FocusLost
        if (M6.getText().equals("")) {
            M6.setText("0");
        }
        suma(13);
    }//GEN-LAST:event_M6FocusLost
    private void M6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M6ActionPerformed

    }//GEN-LAST:event_M6ActionPerformed
    private void M6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_M6KeyReleased
        suma(13);
    }//GEN-LAST:event_M6KeyReleased
    private void M6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_M6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_M6KeyTyped
    private void MTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MTActionPerformed

    }//GEN-LAST:event_MTActionPerformed
    private void K1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_K1FocusGained
        if (K1.getText().equals("0")) {
            K1.setText("");
        }
    }//GEN-LAST:event_K1FocusGained
    private void K1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_K1FocusLost
        if (K1.getText().equals("")) {
            K1.setText("0");
        }
        suma(11);
    }//GEN-LAST:event_K1FocusLost
    private void K1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_K1KeyPressed

    }//GEN-LAST:event_K1KeyPressed
    private void K1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_K1KeyReleased
        suma(11);
    }//GEN-LAST:event_K1KeyReleased
    private void K1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_K1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_K1KeyTyped
    private void K2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_K2FocusGained
        if (K2.getText().equals("0")) {
            K2.setText("");
        }
    }//GEN-LAST:event_K2FocusGained
    private void K2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_K2FocusLost
        if (K2.getText().equals("")) {
            K2.setText("0");
        }
        suma(11);
    }//GEN-LAST:event_K2FocusLost
    private void K2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K2ActionPerformed

    }//GEN-LAST:event_K2ActionPerformed
    private void K2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_K2KeyReleased
        suma(11);
    }//GEN-LAST:event_K2KeyReleased
    private void K2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_K2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_K2KeyTyped
    private void I4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_I4FocusGained
        if (I4.getText().equals("0")) {
            I4.setText("");
        }
    }//GEN-LAST:event_I4FocusGained
    private void I4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_I4FocusLost
        if (I4.getText().equals("")) {
            I4.setText("0");
        }
        suma(9);
    }//GEN-LAST:event_I4FocusLost
    private void I4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I4ActionPerformed

    }//GEN-LAST:event_I4ActionPerformed
    private void I4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_I4KeyReleased
        suma(9);
    }//GEN-LAST:event_I4KeyReleased
    private void I4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_I4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_I4KeyTyped
    private void K3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_K3FocusGained
        if (K3.getText().equals("0")) {
            K3.setText("");
        }
    }//GEN-LAST:event_K3FocusGained
    private void K3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_K3FocusLost
        if (K3.getText().equals("")) {
            K3.setText("0");
        }
        suma(11);
    }//GEN-LAST:event_K3FocusLost
    private void K3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_K3KeyReleased
        suma(11);
    }//GEN-LAST:event_K3KeyReleased
    private void K3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_K3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_K3KeyTyped
    private void I1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_I1FocusGained
        if (I1.getText().equals("0")) {
            I1.setText("");
        }
    }//GEN-LAST:event_I1FocusGained
    private void I1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_I1FocusLost
        if (I1.getText().equals("")) {
            I1.setText("0");
        }
        suma(9);
    }//GEN-LAST:event_I1FocusLost
    private void I1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_I1KeyPressed

    }//GEN-LAST:event_I1KeyPressed
    private void I1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_I1KeyReleased
        suma(9);
    }//GEN-LAST:event_I1KeyReleased
    private void I1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_I1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_I1KeyTyped
    private void K4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_K4FocusGained
        if (K4.getText().equals("0")) {
            K4.setText("");
        }
    }//GEN-LAST:event_K4FocusGained
    private void K4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_K4FocusLost
        if (K4.getText().equals("")) {
            K4.setText("0");
        }
        suma(11);
    }//GEN-LAST:event_K4FocusLost
    private void K4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K4ActionPerformed

    }//GEN-LAST:event_K4ActionPerformed
    private void K4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_K4KeyReleased
        suma(11);
    }//GEN-LAST:event_K4KeyReleased
    private void K4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_K4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_K4KeyTyped
    private void I2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_I2FocusGained
        if (I2.getText().equals("0")) {
            I2.setText("");
        }
    }//GEN-LAST:event_I2FocusGained
    private void I2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_I2FocusLost
        if (I2.getText().equals("")) {
            I2.setText("0");
        }
        suma(9);
    }//GEN-LAST:event_I2FocusLost
    private void I2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I2ActionPerformed

    }//GEN-LAST:event_I2ActionPerformed
    private void I2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_I2KeyReleased
        suma(9);
    }//GEN-LAST:event_I2KeyReleased
    private void I2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_I2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_I2KeyTyped
    private void K5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_K5FocusGained
        if (K5.getText().equals("0")) {
            K5.setText("");
        }
    }//GEN-LAST:event_K5FocusGained
    private void K5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_K5FocusLost
        if (K5.getText().equals("")) {
            K5.setText("0");
        }
        suma(11);
    }//GEN-LAST:event_K5FocusLost
    private void K5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_K5KeyReleased
        suma(11);
    }//GEN-LAST:event_K5KeyReleased
    private void K5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_K5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_K5KeyTyped
    private void I3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_I3FocusGained
        if (I3.getText().equals("0")) {
            I3.setText("");
        }
    }//GEN-LAST:event_I3FocusGained
    private void I3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_I3FocusLost
        if (I3.getText().equals("")) {
            I3.setText("0");
        }
        suma(9);
    }//GEN-LAST:event_I3FocusLost
    private void I3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_I3KeyReleased
        suma(9);
    }//GEN-LAST:event_I3KeyReleased
    private void I3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_I3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_I3KeyTyped
    private void K6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_K6FocusGained
        if (K6.getText().equals("0")) {
            K6.setText("");
        }
    }//GEN-LAST:event_K6FocusGained
    private void K6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_K6FocusLost
        if (K6.getText().equals("")) {
            K6.setText("0");
        }
        suma(11);
    }//GEN-LAST:event_K6FocusLost
    private void K6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K6ActionPerformed

    }//GEN-LAST:event_K6ActionPerformed
    private void K6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_K6KeyReleased
        suma(11);
    }//GEN-LAST:event_K6KeyReleased
    private void K6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_K6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_K6KeyTyped
    private void I5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_I5FocusGained
        if (I5.getText().equals("0")) {
            I5.setText("");
        }
    }//GEN-LAST:event_I5FocusGained
    private void I5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_I5FocusLost
        if (I5.getText().equals("")) {
            I5.setText("0");
        }
        suma(9);
    }//GEN-LAST:event_I5FocusLost
    private void I5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_I5KeyReleased
        suma(9);
    }//GEN-LAST:event_I5KeyReleased
    private void I5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_I5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_I5KeyTyped
    private void KTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KTActionPerformed

    }//GEN-LAST:event_KTActionPerformed
    private void I6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_I6FocusGained
        if (I6.getText().equals("0")) {
            I6.setText("");
        }
    }//GEN-LAST:event_I6FocusGained
    private void I6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_I6FocusLost
        if (I6.getText().equals("")) {
            I6.setText("0");
        }
        suma(9);
    }//GEN-LAST:event_I6FocusLost
    private void I6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I6ActionPerformed

    }//GEN-LAST:event_I6ActionPerformed
    private void I6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_I6KeyReleased
        suma(9);
    }//GEN-LAST:event_I6KeyReleased
    private void I6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_I6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_I6KeyTyped
    private void ITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ITActionPerformed

    }//GEN-LAST:event_ITActionPerformed
    private void J1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_J1FocusGained
        if (J1.getText().equals("0")) {
            J1.setText("");
        }
    }//GEN-LAST:event_J1FocusGained
    private void J1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_J1FocusLost
        if (J1.getText().equals("")) {
            J1.setText("0");
        }
        suma(10);
    }//GEN-LAST:event_J1FocusLost
    private void J1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_J1KeyReleased
        suma(10);
    }//GEN-LAST:event_J1KeyReleased
    private void J1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_J1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_J1KeyTyped
    private void J2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_J2FocusGained
        if (J2.getText().equals("0")) {
            J2.setText("");
        }
    }//GEN-LAST:event_J2FocusGained
    private void J2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_J2FocusLost
        if (J2.getText().equals("")) {
            J2.setText("0");
        }
        suma(10);
    }//GEN-LAST:event_J2FocusLost
    private void J2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_J2ActionPerformed

    }//GEN-LAST:event_J2ActionPerformed
    private void J2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_J2KeyReleased
        suma(10);
    }//GEN-LAST:event_J2KeyReleased
    private void J2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_J2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_J2KeyTyped

    private void J3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_J3FocusGained
        if (J3.getText().equals("0")) {
            J3.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_J3FocusGained

    private void J3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_J3FocusLost
        if (J3.getText().equals("")) {
            J3.setText("0");
        }
        suma(10);   // TODO add your handling code here:
    }//GEN-LAST:event_J3FocusLost

    private void J3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_J3KeyReleased
        suma(10);     // TODO add your handling code here:
    }//GEN-LAST:event_J3KeyReleased

    private void J3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_J3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_J3KeyTyped

    private void J4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_J4FocusGained
        if (J4.getText().equals("0")) {
            J4.setText("");
        }    // TODO add your handling code here:
    }//GEN-LAST:event_J4FocusGained

    private void J4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_J4FocusLost
        if (J4.getText().equals("")) {
            J4.setText("0");
        }
        suma(10);    // TODO add your handling code here:
    }//GEN-LAST:event_J4FocusLost

    private void J4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_J4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_J4ActionPerformed

    private void J4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_J4KeyReleased
        suma(10);    // TODO add your handling code here:
    }//GEN-LAST:event_J4KeyReleased

    private void J4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_J4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_J4KeyTyped

    private void J5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_J5FocusGained
        if (J5.getText().equals("0")) {
            J5.setText("");
        }    // TODO add your handling code here:
    }//GEN-LAST:event_J5FocusGained

    private void J5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_J5FocusLost
        if (J5.getText().equals("")) {
            J5.setText("0");
        }
        suma(10);     // TODO add your handling code here:
    }//GEN-LAST:event_J5FocusLost

    private void J5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_J5KeyReleased
        suma(10);    // TODO add your handling code here:
    }//GEN-LAST:event_J5KeyReleased

    private void J5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_J5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }       // TODO add your handling code here:
    }//GEN-LAST:event_J5KeyTyped

    private void J6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_J6FocusGained
        if (J6.getText().equals("0")) {
            J6.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_J6FocusGained

    private void J6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_J6FocusLost
        if (J6.getText().equals("")) {
            J6.setText("0");
        }
        suma(10);  // TODO add your handling code here:
    }//GEN-LAST:event_J6FocusLost

    private void J6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_J6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_J6ActionPerformed

    private void J6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_J6KeyReleased
        suma(10);      // TODO add your handling code here:
    }//GEN-LAST:event_J6KeyReleased

    private void J6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_J6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_J6KeyTyped

    private void JTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTActionPerformed

    private void H1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_H1FocusGained
        if (H1.getText().equals("0")) {
            H1.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_H1FocusGained

    private void H1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_H1FocusLost
        if (H1.getText().equals("")) {
            H1.setText("0");
        }
        suma(8);     // TODO add your handling code here:
    }//GEN-LAST:event_H1FocusLost

    private void H1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_H1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_H1KeyPressed

    private void H1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_H1KeyReleased
        suma(8);    // TODO add your handling code here:
    }//GEN-LAST:event_H1KeyReleased

    private void H1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_H1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_H1KeyTyped

    private void H2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_H2FocusGained
        if (H2.getText().equals("0")) {
            H2.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_H2FocusGained

    private void H2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_H2FocusLost
        if (H2.getText().equals("")) {
            H2.setText("0");
        }
        suma(8);    // TODO add your handling code here:
    }//GEN-LAST:event_H2FocusLost

    private void H2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_H2ActionPerformed

    private void H2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_H2KeyReleased
        suma(8);  // TODO add your handling code here:
    }//GEN-LAST:event_H2KeyReleased

    private void H2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_H2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_H2KeyTyped

    private void H3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_H3FocusGained
        if (H3.getText().equals("0")) {
            H3.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_H3FocusGained

    private void H3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_H3FocusLost
        if (H3.getText().equals("")) {
            H3.setText("0");
        }
        suma(8);    // TODO add your handling code here:
    }//GEN-LAST:event_H3FocusLost

    private void H3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_H3KeyReleased
        suma(8);  // TODO add your handling code here:
    }//GEN-LAST:event_H3KeyReleased

    private void H3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_H3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_H3KeyTyped

    private void H4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_H4FocusGained
        if (H4.getText().equals("0")) {
            H4.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_H4FocusGained

    private void H4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_H4FocusLost
        if (H4.getText().equals("")) {
            H4.setText("0");
        }
        suma(8);   // TODO add your handling code here:
    }//GEN-LAST:event_H4FocusLost

    private void H4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_H4ActionPerformed

    private void H4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_H4KeyReleased
        suma(8);  // TODO add your handling code here:
    }//GEN-LAST:event_H4KeyReleased

    private void H4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_H4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_H4KeyTyped

    private void H5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_H5FocusGained
        if (H5.getText().equals("0")) {
            H5.setText("");
        }     // TODO add your handling code here:
    }//GEN-LAST:event_H5FocusGained

    private void H5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_H5FocusLost
        if (H5.getText().equals("")) {
            H5.setText("0");
        }
        suma(8);   // TODO add your handling code here:
    }//GEN-LAST:event_H5FocusLost

    private void H5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_H5KeyReleased
        suma(8);  // TODO add your handling code here:
    }//GEN-LAST:event_H5KeyReleased

    private void H5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_H5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_H5KeyTyped

    private void H6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_H6FocusGained
        if (H6.getText().equals("0")) {
            H6.setText("");
        }    // TODO add your handling code here:
    }//GEN-LAST:event_H6FocusGained

    private void H6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_H6FocusLost
        if (H6.getText().equals("")) {
            H6.setText("0");
        }
        suma(8);     // TODO add your handling code here:
    }//GEN-LAST:event_H6FocusLost

    private void H6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_H6ActionPerformed

    private void H6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_H6KeyReleased
        suma(8); // TODO add your handling code here:
    }//GEN-LAST:event_H6KeyReleased

    private void H6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_H6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_H6KeyTyped

    private void HTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HTActionPerformed

    private void R4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R4FocusGained
        if (R4.getText().equals("0")) {
            R4.setText("");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_R4FocusGained

    private void R4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R4FocusLost
        if (R4.getText().equals("")) {
            R4.setText("0");
        }
        suma(18);   // TODO add your handling code here:
    }//GEN-LAST:event_R4FocusLost

    private void R4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_R4ActionPerformed

    private void R4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_R4KeyReleased
        suma(18);  // TODO add your handling code here:
    }//GEN-LAST:event_R4KeyReleased

    private void R4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_R4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_R4KeyTyped

    private void R1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R1FocusGained
        if (R1.getText().equals("0")) {
            R1.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_R1FocusGained

    private void R1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R1FocusLost
        if (R1.getText().equals("")) {
            R1.setText("0");
        }
        suma(18);   // TODO add your handling code here:
    }//GEN-LAST:event_R1FocusLost

    private void R1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_R1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_R1KeyPressed

    private void R1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_R1KeyReleased
        suma(18);  // TODO add your handling code here:
    }//GEN-LAST:event_R1KeyReleased

    private void R1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_R1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_R1KeyTyped

    private void R2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R2FocusGained
        if (R2.getText().equals("0")) {
            R2.setText("");
        } // TODO add your handling code here:
    }//GEN-LAST:event_R2FocusGained

    private void R2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R2FocusLost
        if (R2.getText().equals("")) {
            R2.setText("0");
        }
        suma(18);  // TODO add your handling code here:
    }//GEN-LAST:event_R2FocusLost

    private void R2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_R2ActionPerformed

    private void R2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_R2KeyReleased
        suma(18);   // TODO add your handling code here:
    }//GEN-LAST:event_R2KeyReleased

    private void R2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_R2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_R2KeyTyped

    private void R3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R3FocusGained
        if (R3.getText().equals("0")) {
            R3.setText("");
        } // TODO add your handling code here:
    }//GEN-LAST:event_R3FocusGained

    private void R3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R3FocusLost
        if (R3.getText().equals("")) {
            R3.setText("0");
        }
        suma(18);  // TODO add your handling code here:
    }//GEN-LAST:event_R3FocusLost

    private void R3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_R3KeyReleased
        suma(18);   // TODO add your handling code here:
    }//GEN-LAST:event_R3KeyReleased

    private void R3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_R3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }       // TODO add your handling code here:
    }//GEN-LAST:event_R3KeyTyped

    private void R5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R5FocusGained
        if (R5.getText().equals("0")) {
            R5.setText("");
        } // TODO add your handling code here:
    }//GEN-LAST:event_R5FocusGained

    private void R5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R5FocusLost
        if (R5.getText().equals("")) {
            R5.setText("0");
        }
        suma(18);   // TODO add your handling code here:
    }//GEN-LAST:event_R5FocusLost

    private void R5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_R5KeyReleased
        suma(18);   // TODO add your handling code here:
    }//GEN-LAST:event_R5KeyReleased

    private void R5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_R5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_R5KeyTyped

    private void R6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R6FocusGained
        if (R6.getText().equals("0")) {
            R6.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_R6FocusGained

    private void R6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_R6FocusLost
        if (R6.getText().equals("")) {
            R6.setText("0");
        }
        suma(18);     // TODO add your handling code here:
    }//GEN-LAST:event_R6FocusLost

    private void R6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_R6ActionPerformed

    private void R6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_R6KeyReleased
        suma(18);    // TODO add your handling code here:
    }//GEN-LAST:event_R6KeyReleased

    private void R6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_R6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_R6KeyTyped

    private void RTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RTActionPerformed

    private void S1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S1FocusGained
        if (S1.getText().equals("0")) {
            S1.setText("");
        }    // TODO add your handling code here:
    }//GEN-LAST:event_S1FocusGained

    private void S1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S1FocusLost
        if (S1.getText().equals("")) {
            S1.setText("0");
        }
        suma(19);// TODO add your handling code here:
    }//GEN-LAST:event_S1FocusLost

    private void S1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_S1KeyReleased
        suma(19);  // TODO add your handling code here:
    }//GEN-LAST:event_S1KeyReleased

    private void S1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_S1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_S1KeyTyped

    private void S2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S2FocusGained
        if (S2.getText().equals("0")) {
            S2.setText("");
        }     // TODO add your handling code here:
    }//GEN-LAST:event_S2FocusGained

    private void S2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S2FocusLost
        if (S2.getText().equals("")) {
            S2.setText("0");
        }
        suma(19);  // TODO add your handling code here:
    }//GEN-LAST:event_S2FocusLost

    private void S2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S2ActionPerformed

    private void S2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_S2KeyReleased
        suma(19); // TODO add your handling code here:
    }//GEN-LAST:event_S2KeyReleased

    private void S2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_S2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_S2KeyTyped

    private void S3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S3FocusGained
        if (S3.getText().equals("0")) {
            S3.setText("");
        }     // TODO add your handling code here:
    }//GEN-LAST:event_S3FocusGained

    private void S3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S3FocusLost
        if (S3.getText().equals("")) {
            S3.setText("0");
        }
        suma(19);   // TODO add your handling code here:
    }//GEN-LAST:event_S3FocusLost

    private void S3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_S3KeyReleased
        suma(19); // TODO add your handling code here:
    }//GEN-LAST:event_S3KeyReleased

    private void S3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_S3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_S3KeyTyped

    private void S4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S4FocusGained
        if (S4.getText().equals("0")) {
            S4.setText("");
        }     // TODO add your handling code here:
    }//GEN-LAST:event_S4FocusGained

    private void S4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S4FocusLost
        if (S4.getText().equals("")) {
            S4.setText("0");
        }
        suma(19);    // TODO add your handling code here:
    }//GEN-LAST:event_S4FocusLost

    private void S4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S4ActionPerformed

    private void S4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_S4KeyReleased
        suma(19); // TODO add your handling code here:
    }//GEN-LAST:event_S4KeyReleased

    private void S4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_S4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_S4KeyTyped

    private void S5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S5FocusGained
        if (S5.getText().equals("0")) {
            S5.setText("");
        }     // TODO add your handling code here:
    }//GEN-LAST:event_S5FocusGained

    private void S5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S5FocusLost
        if (S5.getText().equals("")) {
            S5.setText("0");
        }
        suma(19);      // TODO add your handling code here:
    }//GEN-LAST:event_S5FocusLost

    private void S5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_S5KeyReleased
        suma(19);   // TODO add your handling code here:
    }//GEN-LAST:event_S5KeyReleased

    private void S5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_S5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_S5KeyTyped

    private void S6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S6FocusGained
        if (S6.getText().equals("0")) {
            S6.setText("");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_S6FocusGained

    private void S6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S6FocusLost
        if (S6.getText().equals("")) {
            S6.setText("0");
        }
        suma(19);// TODO add your handling code here:
    }//GEN-LAST:event_S6FocusLost

    private void S6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S6ActionPerformed

    private void S6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_S6KeyReleased
        suma(19);  // TODO add your handling code here:
    }//GEN-LAST:event_S6KeyReleased

    private void S6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_S6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_S6KeyTyped

    private void STActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_STActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_STActionPerformed

    private void Q1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Q1FocusGained
        if (Q1.getText().equals("0")) {
            Q1.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_Q1FocusGained

    private void Q1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Q1FocusLost
        if (Q1.getText().equals("")) {
            Q1.setText("0");
        }
        suma(17);   // TODO add your handling code here:
    }//GEN-LAST:event_Q1FocusLost

    private void Q1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Q1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Q1KeyPressed

    private void Q1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Q1KeyReleased
        suma(17);  // TODO add your handling code here:
    }//GEN-LAST:event_Q1KeyReleased

    private void Q1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Q1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_Q1KeyTyped

    private void Q2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Q2FocusGained
        if (Q2.getText().equals("0")) {
            Q2.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_Q2FocusGained

    private void Q2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Q2FocusLost
        if (Q2.getText().equals("")) {
            Q2.setText("0");
        }
        suma(17);   // TODO add your handling code here:
    }//GEN-LAST:event_Q2FocusLost

    private void Q2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Q2ActionPerformed

    private void Q2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Q2KeyReleased
        suma(17);  // TODO add your handling code here:
    }//GEN-LAST:event_Q2KeyReleased

    private void Q2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Q2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_Q2KeyTyped

    private void O4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O4FocusGained
        if (O4.getText().equals("0")) {
            O4.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_O4FocusGained

    private void O4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O4FocusLost
        if (O4.getText().equals("")) {
            O4.setText("0");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_O4FocusLost

    private void O4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_O4ActionPerformed

    private void O4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_O4KeyReleased
        suma(15);   // TODO add your handling code here:
    }//GEN-LAST:event_O4KeyReleased

    private void O4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_O4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }       // TODO add your handling code here:
    }//GEN-LAST:event_O4KeyTyped

    private void Q3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Q3FocusGained
        if (Q3.getText().equals("0")) {
            Q3.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_Q3FocusGained

    private void Q3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Q3FocusLost
        if (Q3.getText().equals("")) {
            Q3.setText("0");
        }
        suma(17); // TODO add your handling code here:
    }//GEN-LAST:event_Q3FocusLost

    private void Q3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Q3KeyReleased
        suma(17);   // TODO add your handling code here:
    }//GEN-LAST:event_Q3KeyReleased

    private void Q3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Q3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_Q3KeyTyped

    private void O1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O1FocusGained
        if (O1.getText().equals("0")) {
            O1.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_O1FocusGained

    private void O1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O1FocusLost
        if (O1.getText().equals("")) {
            O1.setText("0");
        }
        suma(15); // TODO add your handling code here:
    }//GEN-LAST:event_O1FocusLost

    private void O1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_O1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_O1KeyPressed

    private void O1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_O1KeyReleased
        suma(15);  // TODO add your handling code here:
    }//GEN-LAST:event_O1KeyReleased

    private void O1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_O1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_O1KeyTyped

    private void Q4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Q4FocusGained
        if (Q4.getText().equals("0")) {
            Q4.setText("");
        }    // TODO add your handling code here:
    }//GEN-LAST:event_Q4FocusGained

    private void Q4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Q4FocusLost
        if (Q4.getText().equals("")) {
            Q4.setText("0");
        }
        suma(17);    // TODO add your handling code here:
    }//GEN-LAST:event_Q4FocusLost

    private void Q4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Q4ActionPerformed

    private void Q4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Q4KeyReleased
        suma(17);   // TODO add your handling code here:
    }//GEN-LAST:event_Q4KeyReleased

    private void Q4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Q4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }       // TODO add your handling code here:
    }//GEN-LAST:event_Q4KeyTyped

    private void O2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O2FocusGained
        if (O2.getText().equals("0")) {
            O2.setText("");
        }    // TODO add your handling code here:
    }//GEN-LAST:event_O2FocusGained

    private void O2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O2FocusLost
        if (O2.getText().equals("")) {
            O2.setText("0");
        }
        suma(15);    // TODO add your handling code here:
    }//GEN-LAST:event_O2FocusLost

    private void O2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_O2ActionPerformed

    private void O2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_O2KeyReleased
        suma(15); // TODO add your handling code here:
    }//GEN-LAST:event_O2KeyReleased

    private void O2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_O2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_O2KeyTyped

    private void Q5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Q5FocusGained
        if (Q5.getText().equals("0")) {
            Q5.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_Q5FocusGained

    private void Q5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Q5FocusLost
        if (Q5.getText().equals("")) {
            Q5.setText("0");
        }
        suma(17);  // TODO add your handling code here:
    }//GEN-LAST:event_Q5FocusLost

    private void Q5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Q5KeyReleased
        suma(17);   // TODO add your handling code here:
    }//GEN-LAST:event_Q5KeyReleased

    private void Q5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Q5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_Q5KeyTyped

    private void O3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O3FocusGained
        if (O3.getText().equals("0")) {
            O3.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_O3FocusGained

    private void O3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O3FocusLost
        if (O3.getText().equals("")) {
            O3.setText("0");
        }
        suma(15);  // TODO add your handling code here:
    }//GEN-LAST:event_O3FocusLost

    private void O3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_O3KeyReleased
        suma(15);  // TODO add your handling code here:
    }//GEN-LAST:event_O3KeyReleased

    private void O3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_O3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_O3KeyTyped

    private void Q6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Q6FocusGained
        if (Q6.getText().equals("0")) {
            Q6.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_Q6FocusGained

    private void Q6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Q6FocusLost
        if (Q6.getText().equals("")) {
            Q6.setText("0");
        }
        suma(17);      // TODO add your handling code here:
    }//GEN-LAST:event_Q6FocusLost

    private void Q6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Q6ActionPerformed

    private void Q6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Q6KeyReleased
        suma(17);  // TODO add your handling code here:
    }//GEN-LAST:event_Q6KeyReleased

    private void Q6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Q6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_Q6KeyTyped

    private void O5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O5FocusGained
        if (O5.getText().equals("0")) {
            O5.setText("");
        }       // TODO add your handling code here:
    }//GEN-LAST:event_O5FocusGained

    private void O5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O5FocusLost
        if (O5.getText().equals("")) {
            O5.setText("0");
        }
        suma(15);    // TODO add your handling code here:
    }//GEN-LAST:event_O5FocusLost

    private void O5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_O5KeyReleased
        suma(15);  // TODO add your handling code here:
    }//GEN-LAST:event_O5KeyReleased

    private void O5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_O5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_O5KeyTyped

    private void QTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_QTActionPerformed

    private void O6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O6FocusGained
        if (O6.getText().equals("0")) {
            O6.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_O6FocusGained

    private void O6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O6FocusLost
        if (O6.getText().equals("")) {
            O6.setText("0");
        }
        suma(15);  // TODO add your handling code here:
    }//GEN-LAST:event_O6FocusLost

    private void O6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_O6ActionPerformed

    private void O6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_O6KeyReleased
        suma(15);// TODO add your handling code here:
    }//GEN-LAST:event_O6KeyReleased

    private void O6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_O6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_O6KeyTyped

    private void X4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_X4FocusGained
        if (X4.getText().equals("0")) {
            X4.setText("");
        }     // TODO add your handling code here:
    }//GEN-LAST:event_X4FocusGained

    private void X4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_X4FocusLost
        if (X4.getText().equals("")) {
            X4.setText("0");
        }
        suma(24);   // TODO add your handling code here:
    }//GEN-LAST:event_X4FocusLost

    private void X4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_X4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_X4ActionPerformed

    private void X4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_X4KeyReleased
        suma(24); // TODO add your handling code here:
    }//GEN-LAST:event_X4KeyReleased

    private void X4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_X4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_X4KeyTyped

    private void OTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OTActionPerformed

    private void X1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_X1FocusGained
        if (X1.getText().equals("0")) {
            X1.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_X1FocusGained

    private void X1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_X1FocusLost
        if (X1.getText().equals("")) {
            X1.setText("0");
        }
        suma(24);  // TODO add your handling code here:
    }//GEN-LAST:event_X1FocusLost

    private void X1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_X1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_X1KeyPressed

    private void X1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_X1KeyReleased
        suma(24);  // TODO add your handling code here:
    }//GEN-LAST:event_X1KeyReleased

    private void X1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_X1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_X1KeyTyped

    private void P1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P1FocusGained
        if (P1.getText().equals("0")) {
            P1.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_P1FocusGained

    private void P1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P1FocusLost
        if (P1.getText().equals("")) {
            P1.setText("0");
        }
        suma(16); // TODO add your handling code here:
    }//GEN-LAST:event_P1FocusLost

    private void P1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_P1KeyReleased
        suma(16); // TODO add your handling code here:
    }//GEN-LAST:event_P1KeyReleased

    private void P1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_P1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }           // TODO add your handling code here:
    }//GEN-LAST:event_P1KeyTyped

    private void X2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_X2FocusGained
        if (X2.getText().equals("0")) {
            X2.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_X2FocusGained

    private void X2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_X2FocusLost
        if (X2.getText().equals("")) {
            X2.setText("0");
        }
        suma(24);   // TODO add your handling code here:
    }//GEN-LAST:event_X2FocusLost

    private void X2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_X2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_X2ActionPerformed

    private void X2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_X2KeyReleased
        suma(24);  // TODO add your handling code here:
    }//GEN-LAST:event_X2KeyReleased

    private void X2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_X2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_X2KeyTyped

    private void P2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P2FocusGained
        if (P2.getText().equals("0")) {
            P2.setText("");
        } // TODO add your handling code here:
    }//GEN-LAST:event_P2FocusGained

    private void P2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P2FocusLost
        if (P2.getText().equals("")) {
            P2.setText("0");
        }
        suma(16); // TODO add your handling code here:
    }//GEN-LAST:event_P2FocusLost

    private void P2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_P2ActionPerformed

    private void P2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_P2KeyReleased
        suma(16); // TODO add your handling code here:
    }//GEN-LAST:event_P2KeyReleased

    private void P2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_P2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_P2KeyTyped

    private void X3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_X3FocusGained
        if (X3.getText().equals("0")) {
            X3.setText("");
        }     // TODO add your handling code here:
    }//GEN-LAST:event_X3FocusGained

    private void X3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_X3FocusLost
        if (X3.getText().equals("")) {
            X3.setText("0");
        }
        suma(24);   // TODO add your handling code here:
    }//GEN-LAST:event_X3FocusLost

    private void X3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_X3KeyReleased
        suma(24);   // TODO add your handling code here:
    }//GEN-LAST:event_X3KeyReleased

    private void X3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_X3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }       // TODO add your handling code here:
    }//GEN-LAST:event_X3KeyTyped

    private void P3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P3FocusGained
        if (P3.getText().equals("0")) {
            P3.setText("");
        }     // TODO add your handling code here:
    }//GEN-LAST:event_P3FocusGained

    private void P3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P3FocusLost
        if (P3.getText().equals("")) {
            P3.setText("0");
        }
        suma(16);// TODO add your handling code here:
    }//GEN-LAST:event_P3FocusLost

    private void P3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_P3KeyReleased
        suma(16);  // TODO add your handling code here:
    }//GEN-LAST:event_P3KeyReleased

    private void P3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_P3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_P3KeyTyped

    private void X5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_X5FocusGained
        if (X5.getText().equals("0")) {
            X5.setText("");
        }    // TODO add your handling code here:
    }//GEN-LAST:event_X5FocusGained

    private void X5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_X5FocusLost
        if (X5.getText().equals("")) {
            X5.setText("0");
        }
        suma(24);    // TODO add your handling code here:
    }//GEN-LAST:event_X5FocusLost

    private void X5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_X5KeyReleased
        suma(24);  // TODO add your handling code here:
    }//GEN-LAST:event_X5KeyReleased

    private void X5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_X5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_X5KeyTyped

    private void P4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P4FocusGained
        if (P4.getText().equals("0")) {
            P4.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_P4FocusGained

    private void P4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P4FocusLost
        if (P4.getText().equals("")) {
            P4.setText("0");
        }
        suma(16); // TODO add your handling code here:
    }//GEN-LAST:event_P4FocusLost

    private void P4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_P4ActionPerformed

    private void P4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_P4KeyReleased
        suma(16);   // TODO add your handling code here:
    }//GEN-LAST:event_P4KeyReleased

    private void P4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_P4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_P4KeyTyped

    private void X6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_X6FocusGained
        if (X6.getText().equals("0")) {
            X6.setText("");
        }     // TODO add your handling code here:
    }//GEN-LAST:event_X6FocusGained

    private void X6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_X6FocusLost
        if (X6.getText().equals("")) {
            X6.setText("0");
        }
        suma(24);     // TODO add your handling code here:
    }//GEN-LAST:event_X6FocusLost

    private void X6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_X6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_X6ActionPerformed

    private void X6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_X6KeyReleased
        suma(24);    // TODO add your handling code here:
    }//GEN-LAST:event_X6KeyReleased

    private void X6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_X6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_X6KeyTyped

    private void P5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P5FocusGained
        if (P5.getText().equals("0")) {
            P5.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_P5FocusGained

    private void P5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P5FocusLost
        if (P5.getText().equals("")) {
            P5.setText("0");
        }
        suma(16);   // TODO add your handling code here:
    }//GEN-LAST:event_P5FocusLost

    private void P5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_P5KeyReleased
        suma(16);    // TODO add your handling code here:
    }//GEN-LAST:event_P5KeyReleased

    private void P5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_P5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_P5KeyTyped

    private void XTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_XTActionPerformed

    private void P6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P6FocusGained
        if (P6.getText().equals("0")) {
            P6.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_P6FocusGained

    private void P6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P6FocusLost
        if (P6.getText().equals("")) {
            P6.setText("0");
        }
        suma(16); // TODO add your handling code here:
    }//GEN-LAST:event_P6FocusLost

    private void P6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_P6ActionPerformed

    private void P6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_P6KeyReleased
        suma(16);     // TODO add your handling code here:
    }//GEN-LAST:event_P6KeyReleased

    private void P6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_P6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_P6KeyTyped

    private void PTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PTActionPerformed

    private void W1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_W1FocusGained
        if (W1.getText().equals("0")) {
            W1.setText("");
        }     // TODO add your handling code here:
    }//GEN-LAST:event_W1FocusGained

    private void W1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_W1FocusLost
        if (W1.getText().equals("")) {
            W1.setText("0");
        }
        suma(23);   // TODO add your handling code here:
    }//GEN-LAST:event_W1FocusLost

    private void W1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_W1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_W1KeyPressed

    private void W1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_W1KeyReleased
        suma(23);  // TODO add your handling code here:
    }//GEN-LAST:event_W1KeyReleased

    private void W1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_W1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_W1KeyTyped

    private void W2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_W2FocusGained
        if (W2.getText().equals("0")) {
            W2.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_W2FocusGained

    private void W2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_W2FocusLost
        if (W2.getText().equals("")) {
            W2.setText("0");
        }
        suma(23); // TODO add your handling code here:
    }//GEN-LAST:event_W2FocusLost

    private void W2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_W2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_W2ActionPerformed

    private void W2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_W2KeyReleased
        suma(23);  // TODO add your handling code here:
    }//GEN-LAST:event_W2KeyReleased

    private void W2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_W2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_W2KeyTyped

    private void U4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_U4FocusGained
        if (U4.getText().equals("0")) {
            U4.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_U4FocusGained

    private void U4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_U4FocusLost
        if (U4.getText().equals("")) {
            U4.setText("0");
            suma(21);
        }// TODO add your handling code here:
    }//GEN-LAST:event_U4FocusLost

    private void U4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_U4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_U4ActionPerformed

    private void U4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_U4KeyReleased
        suma(21);  // TODO add your handling code here:
    }//GEN-LAST:event_U4KeyReleased

    private void U4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_U4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_U4KeyTyped

    private void W3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_W3FocusGained
        if (W3.getText().equals("0")) {
            W3.setText("");
        } // TODO add your handling code here:
    }//GEN-LAST:event_W3FocusGained

    private void W3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_W3FocusLost
        if (W3.getText().equals("")) {
            W3.setText("0");
        }
        suma(23);// TODO add your handling code here:
    }//GEN-LAST:event_W3FocusLost

    private void W3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_W3KeyReleased
        suma(23);  // TODO add your handling code here:
    }//GEN-LAST:event_W3KeyReleased

    private void W3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_W3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_W3KeyTyped

    private void N1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_N1FocusGained
        if (N1.getText().equals("0")) {
            N1.setText("");
        } // TODO add your handling code here:
    }//GEN-LAST:event_N1FocusGained

    private void N1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_N1FocusLost
        if (N1.getText().equals("")) {
            N1.setText("0");
        }
        suma(14);  // TODO add your handling code here:
    }//GEN-LAST:event_N1FocusLost

    private void N1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_N1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_N1KeyPressed

    private void N1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_N1KeyReleased
        suma(14);  // TODO add your handling code here:
    }//GEN-LAST:event_N1KeyReleased

    private void N1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_N1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_N1KeyTyped

    private void N2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_N2FocusGained
        if (N2.getText().equals("0")) {
            N2.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_N2FocusGained

    private void N2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_N2FocusLost
        if (N2.getText().equals("")) {
            N2.setText("0");
        }
        suma(14);     // TODO add your handling code here:
    }//GEN-LAST:event_N2FocusLost

    private void N2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_N2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_N2ActionPerformed

    private void N2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_N2KeyReleased
        suma(14);   // TODO add your handling code here:
    }//GEN-LAST:event_N2KeyReleased

    private void N2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_N2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_N2KeyTyped

    private void N3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_N3FocusGained
        if (N3.getText().equals("0")) {
            N3.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_N3FocusGained

    private void N3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_N3FocusLost
        if (N3.getText().equals("")) {
            N3.setText("0");
        }
        suma(14);   // TODO add your handling code here:
    }//GEN-LAST:event_N3FocusLost

    private void N3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_N3KeyReleased
        suma(14);  // TODO add your handling code here:
    }//GEN-LAST:event_N3KeyReleased

    private void N3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_N3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_N3KeyTyped

    private void N4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_N4FocusGained
        if (N4.getText().equals("0")) {
            N4.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_N4FocusGained

    private void N4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_N4FocusLost
        if (N4.getText().equals("")) {
            N4.setText("0");
        }
        suma(14);  // TODO add your handling code here:
    }//GEN-LAST:event_N4FocusLost

    private void N4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_N4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_N4ActionPerformed

    private void N4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_N4KeyReleased
        suma(14);   // TODO add your handling code here:
    }//GEN-LAST:event_N4KeyReleased

    private void N4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_N4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_N4KeyTyped

    private void N5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_N5FocusGained
        if (N5.getText().equals("0")) {
            N5.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_N5FocusGained

    private void N5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_N5FocusLost
        if (N5.getText().equals("")) {
            N5.setText("0");
        }
        suma(14);  // TODO add your handling code here:
    }//GEN-LAST:event_N5FocusLost

    private void N5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_N5KeyReleased
        suma(14);    // TODO add your handling code here:
    }//GEN-LAST:event_N5KeyReleased

    private void N5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_N5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_N5KeyTyped

    private void N6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_N6FocusGained
        if (N6.getText().equals("0")) {
            N6.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_N6FocusGained

    private void N6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_N6FocusLost
        if (N6.getText().equals("")) {
            N6.setText("0");
        }
        suma(14);  // TODO add your handling code here:
    }//GEN-LAST:event_N6FocusLost

    private void N6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_N6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_N6ActionPerformed

    private void N6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_N6KeyReleased
        suma(14);   // TODO add your handling code here:
    }//GEN-LAST:event_N6KeyReleased

    private void N6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_N6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_N6KeyTyped

    private void U1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_U1FocusGained
        if (U1.getText().equals("0")) {
            U1.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_U1FocusGained

    private void U1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_U1FocusLost
        if (U1.getText().equals("")) {
            U1.setText("0");
        }
        suma(21); // TODO add your handling code here:
    }//GEN-LAST:event_U1FocusLost

    private void U1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_U1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_U1KeyPressed

    private void U1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_U1KeyReleased
        suma(21);   // TODO add your handling code here:
    }//GEN-LAST:event_U1KeyReleased

    private void U1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_U1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_U1KeyTyped

    private void W4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_W4FocusGained
        if (W4.getText().equals("0")) {
            W4.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_W4FocusGained

    private void W4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_W4FocusLost
        if (W4.getText().equals("")) {
            W4.setText("0");
        }
        suma(23);    // TODO add your handling code here:
    }//GEN-LAST:event_W4FocusLost

    private void W4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_W4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_W4ActionPerformed

    private void W4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_W4KeyReleased
        suma(23);  // TODO add your handling code here:
    }//GEN-LAST:event_W4KeyReleased

    private void W4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_W4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }           // TODO add your handling code here:
    }//GEN-LAST:event_W4KeyTyped

    private void U2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_U2FocusGained
        if (U2.getText().equals("0")) {
            U2.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_U2FocusGained

    private void U2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_U2FocusLost
        if (U2.getText().equals("")) {
            U2.setText("0");
        }
        suma(21);    // TODO add your handling code here:
    }//GEN-LAST:event_U2FocusLost

    private void U2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_U2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_U2ActionPerformed

    private void U2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_U2KeyReleased
        suma(21);   // TODO add your handling code here:
    }//GEN-LAST:event_U2KeyReleased

    private void U2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_U2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_U2KeyTyped

    private void W5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_W5FocusGained
        if (W5.getText().equals("0")) {
            W5.setText("");
        }    // TODO add your handling code here:
    }//GEN-LAST:event_W5FocusGained

    private void W5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_W5FocusLost
        if (W5.getText().equals("")) {
            W5.setText("0");
        }
        suma(23);    // TODO add your handling code here:
    }//GEN-LAST:event_W5FocusLost

    private void W5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_W5KeyReleased
        suma(23);  // TODO add your handling code here:
    }//GEN-LAST:event_W5KeyReleased

    private void W5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_W5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_W5KeyTyped

    private void U3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_U3FocusGained
        if (U3.getText().equals("0")) {
            U3.setText("");
        }       // TODO add your handling code here:
    }//GEN-LAST:event_U3FocusGained

    private void U3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_U3FocusLost
        if (U3.getText().equals("")) {
            U3.setText("0");
        }
        suma(21);    // TODO add your handling code here:
    }//GEN-LAST:event_U3FocusLost

    private void U3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_U3KeyReleased
        suma(21);   // TODO add your handling code here:
    }//GEN-LAST:event_U3KeyReleased

    private void U3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_U3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_U3KeyTyped

    private void W6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_W6FocusGained
        if (W6.getText().equals("0")) {
            W6.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_W6FocusGained

    private void W6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_W6FocusLost
        if (W6.getText().equals("")) {
            W6.setText("0");
        }
        suma(23);    // TODO add your handling code here:
    }//GEN-LAST:event_W6FocusLost

    private void W6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_W6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_W6ActionPerformed

    private void W6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_W6KeyReleased
        suma(23);   // TODO add your handling code here:
    }//GEN-LAST:event_W6KeyReleased

    private void W6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_W6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_W6KeyTyped

    private void U5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_U5FocusGained
        if (U5.getText().equals("0")) {
            U5.setText("");
        }// TODO add your handling code here:
    }//GEN-LAST:event_U5FocusGained

    private void U5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_U5FocusLost
        if (U5.getText().equals("")) {
            U5.setText("0");
        }
        suma(21); // TODO add your handling code here:
    }//GEN-LAST:event_U5FocusLost

    private void U5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_U5KeyReleased
        suma(21);    // TODO add your handling code here:
    }//GEN-LAST:event_U5KeyReleased

    private void U5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_U5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_U5KeyTyped

    private void WTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_WTActionPerformed

    private void U6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_U6FocusGained
        if (U6.getText().equals("0")) {
            U6.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_U6FocusGained

    private void U6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_U6FocusLost
        if (U6.getText().equals("")) {
            U6.setText("0");
        }
        suma(21);   // TODO add your handling code here:
    }//GEN-LAST:event_U6FocusLost

    private void U6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_U6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_U6ActionPerformed

    private void U6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_U6KeyReleased
        suma(21);   // TODO add your handling code here:
    }//GEN-LAST:event_U6KeyReleased

    private void U6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_U6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_U6KeyTyped

    private void UTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UTActionPerformed

    private void V1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_V1FocusGained
        if (V1.getText().equals("0")) {
            V1.setText("");
        }// TODO add your handling code here:
    }//GEN-LAST:event_V1FocusGained

    private void V1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_V1FocusLost
        if (V1.getText().equals("")) {
            V1.setText("0");
        }
        suma(22);  // TODO add your handling code here:
    }//GEN-LAST:event_V1FocusLost

    private void V1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_V1KeyReleased
        suma(22);   // TODO add your handling code here:
    }//GEN-LAST:event_V1KeyReleased

    private void V1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_V1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }           // TODO add your handling code here:
    }//GEN-LAST:event_V1KeyTyped

    private void V2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_V2FocusGained
        if (V2.getText().equals("0")) {
            V2.setText("");
        }// TODO add your handling code here:
    }//GEN-LAST:event_V2FocusGained

    private void V2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_V2FocusLost
        if (V2.getText().equals("")) {
            V2.setText("0");
        }
        suma(22);   // TODO add your handling code here:
    }//GEN-LAST:event_V2FocusLost

    private void V2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_V2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_V2ActionPerformed

    private void V2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_V2KeyReleased
        suma(22);   // TODO add your handling code here:
    }//GEN-LAST:event_V2KeyReleased

    private void V2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_V2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_V2KeyTyped

    private void V3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_V3FocusGained
        if (V3.getText().equals("0")) {
            V3.setText("");
        } // TODO add your handling code here:
    }//GEN-LAST:event_V3FocusGained

    private void V3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_V3FocusLost
        if (V3.getText().equals("")) {
            V3.setText("0");
        }
        suma(22);   // TODO add your handling code here:
    }//GEN-LAST:event_V3FocusLost

    private void V3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_V3KeyReleased
        suma(22);    // TODO add your handling code here:
    }//GEN-LAST:event_V3KeyReleased

    private void V3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_V3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }           // TODO add your handling code here:
    }//GEN-LAST:event_V3KeyTyped

    private void V4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_V4FocusGained
        if (V4.getText().equals("0")) {
            V4.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_V4FocusGained

    private void V4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_V4FocusLost
        if (V4.getText().equals("")) {
            V4.setText("0");
        }
        suma(22);   // TODO add your handling code here:
    }//GEN-LAST:event_V4FocusLost

    private void V4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_V4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_V4ActionPerformed

    private void V4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_V4KeyReleased
        suma(22);   // TODO add your handling code here:
    }//GEN-LAST:event_V4KeyReleased

    private void V4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_V4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_V4KeyTyped

    private void V5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_V5FocusGained
        if (V5.getText().equals("0")) {
            V5.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_V5FocusGained

    private void V5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_V5FocusLost
        if (V5.getText().equals("")) {
            V5.setText("0");
        }
        suma(22);     // TODO add your handling code here:
    }//GEN-LAST:event_V5FocusLost

    private void V5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_V5KeyReleased
        suma(22);   // TODO add your handling code here:
    }//GEN-LAST:event_V5KeyReleased

    private void V5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_V5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }           // TODO add your handling code here:
    }//GEN-LAST:event_V5KeyTyped

    private void V6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_V6FocusGained
        if (V6.getText().equals("0")) {
            V6.setText("");
        } // TODO add your handling code here:
    }//GEN-LAST:event_V6FocusGained

    private void V6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_V6FocusLost
        if (V6.getText().equals("")) {
            V6.setText("0");
        }
        suma(22);   // TODO add your handling code here:
    }//GEN-LAST:event_V6FocusLost

    private void V6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_V6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_V6ActionPerformed

    private void V6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_V6KeyReleased
        suma(22);  // TODO add your handling code here:
    }//GEN-LAST:event_V6KeyReleased

    private void V6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_V6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_V6KeyTyped

    private void VTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VTActionPerformed

    private void T1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_T1FocusGained
        if (T1.getText().equals("0")) {
            T1.setText("");
        } // TODO add your handling code here:
    }//GEN-LAST:event_T1FocusGained

    private void T1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_T1FocusLost
        if (T1.getText().equals("")) {
            T1.setText("0");
        }
        suma(20); // TODO add your handling code here:
    }//GEN-LAST:event_T1FocusLost

    private void T1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_T1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_T1KeyPressed

    private void T1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_T1KeyReleased
        suma(20);   // TODO add your handling code here:
    }//GEN-LAST:event_T1KeyReleased

    private void T1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_T1KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_T1KeyTyped

    private void T2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_T2FocusGained
        if (T2.getText().equals("0")) {
            T2.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_T2FocusGained

    private void T2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_T2FocusLost
        if (T2.getText().equals("")) {
            T2.setText("0");
        }
        suma(20); // TODO add your handling code here:
    }//GEN-LAST:event_T2FocusLost

    private void T2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_T2ActionPerformed

    private void T2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_T2KeyReleased
        suma(20);    // TODO add your handling code here:
    }//GEN-LAST:event_T2KeyReleased

    private void T2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_T2KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_T2KeyTyped

    private void T3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_T3FocusGained
        if (T3.getText().equals("0")) {
            T3.setText("");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_T3FocusGained

    private void T3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_T3FocusLost
        if (T3.getText().equals("")) {
            T3.setText("0");
        }
        suma(20);  // TODO add your handling code here:
    }//GEN-LAST:event_T3FocusLost

    private void T3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_T3KeyReleased
        suma(20);     // TODO add your handling code here:
    }//GEN-LAST:event_T3KeyReleased

    private void T3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_T3KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_T3KeyTyped

    private void T4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_T4FocusGained
        if (T4.getText().equals("0")) {
            T4.setText("");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_T4FocusGained

    private void T4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_T4FocusLost
        if (T4.getText().equals("")) {
            T4.setText("0");
        }
        suma(20);   // TODO add your handling code here:
    }//GEN-LAST:event_T4FocusLost

    private void T4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_T4ActionPerformed

    private void T4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_T4KeyReleased
        suma(20);    // TODO add your handling code here:
    }//GEN-LAST:event_T4KeyReleased

    private void T4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_T4KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_T4KeyTyped

    private void T5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_T5FocusGained
        if (T5.getText().equals("0")) {
            T5.setText("");
        }// TODO add your handling code here:
    }//GEN-LAST:event_T5FocusGained

    private void T5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_T5FocusLost
        if (T5.getText().equals("")) {
            T5.setText("0");
        }
        suma(20);  // TODO add your handling code here:
    }//GEN-LAST:event_T5FocusLost

    private void T5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_T5KeyReleased
        suma(20);    // TODO add your handling code here:
    }//GEN-LAST:event_T5KeyReleased

    private void T5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_T5KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }       // TODO add your handling code here:
    }//GEN-LAST:event_T5KeyTyped

    private void T6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_T6FocusGained
        if (T6.getText().equals("0")) {
            T6.setText("");
        } // TODO add your handling code here:
    }//GEN-LAST:event_T6FocusGained

    private void T6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_T6FocusLost
        if (T6.getText().equals("")) {
            T6.setText("0");
        }
        suma(20);   // TODO add your handling code here:
    }//GEN-LAST:event_T6FocusLost

    private void T6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_T6ActionPerformed

    private void T6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_T6KeyReleased
        suma(20);    // TODO add your handling code here:
    }//GEN-LAST:event_T6KeyReleased

    private void T6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_T6KeyTyped
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            getToolkit().beep();
            evt.consume();
        }       // TODO add your handling code here:
    }//GEN-LAST:event_T6KeyTyped

    private void TTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TTActionPerformed

    private void NTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NTActionPerformed

    private void S3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S3ActionPerformed
    public void guardar() {
      String fecha="";
          if (calendario.getDate() != null) {
            fecha = new SimpleDateFormat("dd-MMM-yyyy").format(calendario.getDate()); } //se extrae la fecha del calendario y se guarda en una variable 
        String g[] = new String[3]; 
        String estatus = "A";
        g[0] = "insert into cribas values (null," + id + ",'19','" + A1.getText() + "," + B1.getText() + "," + C1.getText() + "," + D1.getText() + "," + E1.getText() + "," + F1.getText() + "," + G1.getText() + "," + H1.getText() + "," + I1.getText() + "," + J1.getText() + "," + K1.getText() + "," + L1.getText() + "," + M1.getText() + "," + N1.getText() + "," + O1.getText() + ","
                + "" + P1.getText() + "," + Q1.getText() + "," + R1.getText() + "," + S1.getText() + "," + T1.getText() + "," + U1.getText() + "," + V1.getText() + "," + W1.getText() + "," + X1.getText() + "'),(null," + id + ",'18','" + A2.getText() + "," + B2.getText() + "," + C2.getText() + "," + D2.getText() + "," + E2.getText() + "," + F2.getText() + "," + G2.getText() + "," + H2.getText() + "," + I2.getText() + "," + J2.getText() + "," + K2.getText() + "," + L2.getText() + "," + M2.getText() + "," + N2.getText() + "," + O2.getText() + ","
                + "" + P2.getText() + "," + Q2.getText() + "," + R2.getText() + "," + S2.getText() + "," + T2.getText() + "," + U2.getText() + "," + V2.getText() + "," + W2.getText() + "," + X2.getText() + "'),(null," + id + ",'17','" + A3.getText() + "," + B3.getText() + "," + C3.getText() + "," + D3.getText() + "," + E3.getText() + "," + F3.getText() + "," + G3.getText() + "," + H3.getText() + "," + I3.getText() + "," + J3.getText() + "," + K3.getText() + "," + L3.getText() + "," + M3.getText() + "," + N3.getText() + "," + O3.getText() + ","
                + "" + P3.getText() + "," + Q3.getText() + "," + R3.getText() + "," + S3.getText() + "," + T3.getText() + "," + U3.getText() + "," + V3.getText() + "," + W3.getText() + "," + X3.getText() + "'),(null," + id + ",'16','" + A4.getText() + "," + B4.getText() + "," + C4.getText() + "," + D4.getText() + "," + E4.getText() + "," + F4.getText() + "," + G4.getText() + "," + H4.getText() + "," + I4.getText() + "," + J4.getText() + "," + K4.getText() + "," + L4.getText() + "," + M4.getText() + "," + N4.getText() + "," + O4.getText() + ","
                + "" + P4.getText() + "," + Q4.getText() + "," + R4.getText() + "," + S4.getText() + "," + T4.getText() + "," + U4.getText() + "," + V4.getText() + "," + W4.getText() + "," + X4.getText() + "'),(null," + id + ",'15','" + A5.getText() + "," + B5.getText() + "," + C5.getText() + "," + D5.getText() + "," + E5.getText() + "," + F5.getText() + "," + G5.getText() + "," + H5.getText() + "," + I5.getText() + "," + J5.getText() + "," + K5.getText() + "," + L5.getText() + "," + M5.getText() + "," + N5.getText() + "," + O5.getText() + ","
                + "" + P5.getText() + "," + Q5.getText() + "," + R5.getText() + "," + S5.getText() + "," + T5.getText() + "," + U5.getText() + "," + V5.getText() + "," + W5.getText() + "," + X5.getText() + "'),(null," + id + ",'F','" + A6.getText() + "," + B6.getText() + "," + C6.getText() + "," + D6.getText() + "," + E6.getText() + "," + F6.getText() + "," + G6.getText() + "," + H6.getText() + "," + I6.getText() + "," + J6.getText() + "," + K6.getText() + "," + L6.getText() + "," + M6.getText() + "," + N6.getText() + "," + O6.getText() + ","
                + "" + P6.getText() + "," + Q6.getText() + "," + R6.getText() + "," + S6.getText() + "," + T6.getText() + "," + U6.getText() + "," + V6.getText() + "," + W6.getText() + "," + X6.getText() + "'),(null," + id + ",'TOTAL','" + AT.getText() + "," + BT.getText() + "," + CT.getText() + "," + DT.getText() + "," + ET.getText() + "," + FT.getText() + "," + GT.getText() + "," + HT.getText() + "," + IT.getText() + "," + JT.getText() + "," + KT.getText() + "," + LT.getText() + "," + MT.getText() + "," + NT.getText() + "," + OT.getText() + ","
                + "" + PT.getText() + "," + QT.getText() + "," + RT.getText() + "," + ST.getText() + "," + TT.getText() + "," + UT.getText() + "," + VT.getText() + "," + WT.getText() + "," + XT.getText() + "')";
        g[1] = "insert into datosev values (null," + id + ",'" + fecha + "'," + uniformidad.getValue() + ",'" + humedado.getText() + "','" + humedadc.getText() + "'," + color.getValue() + ",'" + evaluador.getSelectedItem() + "','" + puntuacion.getText() + "'," + id + ",'" + PesoEv.getText() + "','"+Doro.getText()+"')";
        System.out.println(csm+" "+ comunindad);
        String taza = mdb.devuelveUnDato("select taza from bitacoralab "
                + "where (id_muestra='" + csm + "' and comunidad='" + comunindad + "')");
        if (taza.equals("1")) {
            estatus = "Disp";
        }
        g[2] = "update bitacoralab set aspecto='1'  where id_bitacora=" + id + "";
       
        if (!PesoEv.equals("0")) {
              if (!humedado.equals("")) {
                  if (!AT.equals("0")) {
                      
            
        try {
         
            mdb.insertarBasicos(g[0]);
            mdb.insertarBasicos(g[1]);
            mdb.insertarBasicos(g[2]);
            JOptionPane.showMessageDialog(null, "Inserción Exitosa");
            jpDP.llenarTabla();
                   try {
    for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
            UIManager.setLookAndFeel(info.getClassName());
            break;
        }
    }
} catch (Exception e) {
    // If Nimbus is not available, you can set the GUI to another look and feel.
}
            this.dispose();
        } catch (Exception e) {
        }   
                 }else { JOptionPane.showMessageDialog(null, "¡Asegurate de llenar los pesos en las cribas!");  }
             }else { JOptionPane.showMessageDialog(null, "¡Escribe la Humedad de oro!");  }
          }else { JOptionPane.showMessageDialog(null, "¡Escribe cuanto peso esta siendo evaluado!");  }
        
    }
    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        guardar();
// TODO add your handling code here:
    }//GEN-LAST:event_GuardarActionPerformed
    private void PesoEvFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PesoEvFocusGained
        if (PesoEv.getText().equals("0")) {
            PesoEv.setText("");
        }     // TODO add your handling code here:
    }//GEN-LAST:event_PesoEvFocusGained
    private void PesoEvFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PesoEvFocusLost
        if (PesoEv.getText().equals("")) {
            PesoEv.setText("0");
        }         // TODO add your handling code here:
    }//GEN-LAST:event_PesoEvFocusLost

    private void evaluadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evaluadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_evaluadorActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       try {
    for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
            UIManager.setLookAndFeel(info.getClassName());
            break;
        }
    }
} catch (Exception e) {
    // If Nimbus is not available, you can set the GUI to another look and feel.
}
        this.dispose();            // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    public void puntuacion() {
        int v[] = new int[23], total = 0;
        v[0] = Integer.parseInt(BT.getText());
        v[1] = Integer.parseInt(CT.getText());
        v[2] = Integer.parseInt(DT.getText());
        v[3] = Integer.parseInt(FT.getText());
        v[4] = Integer.parseInt(GT.getText());
        v[5] = Integer.parseInt(HT.getText());
        v[6] = Integer.parseInt(IT.getText());
        v[7] = Integer.parseInt(JT.getText());
        v[8] = Integer.parseInt(KT.getText());
        v[9] = Integer.parseInt(LT.getText());
        v[10] = Integer.parseInt(MT.getText());
        v[12] = Integer.parseInt(NT.getText());
        v[13] = Integer.parseInt(OT.getText());
        v[14] = Integer.parseInt(PT.getText());
        v[15] = Integer.parseInt(QT.getText());
        v[16] = Integer.parseInt(RT.getText());
        v[17] = Integer.parseInt(ST.getText());
        v[18] = Integer.parseInt(TT.getText());
        v[19] = Integer.parseInt(UT.getText());
        v[20] = Integer.parseInt(VT.getText());
        v[21] = Integer.parseInt(WT.getText());
        v[22] = Integer.parseInt(XT.getText());
        int i = 0;
        do {
            total = total + v[i];
            i++;
            //System.out.println(total);
        } while (i < 23);

        puntuacion.setText(total + "");

    }

    public static int trunc(double num) {
        String strnum = num + "";
        int indice = strnum.indexOf(".");
        return Integer.parseInt(strnum.substring(0, indice));
    }

    public void suma(int num) {

        double formula,Pe,ad;
        int v[] = new int[6], vt,  res,av;
        Pe = Integer.parseInt(PesoEv.getText());
        switch (num) {
            case 1:
                v[0] = Integer.parseInt(A1.getText());
                v[1] = Integer.parseInt(A2.getText());
                v[2] = Integer.parseInt(A3.getText());
                v[3] = Integer.parseInt(A4.getText());
                v[4] = Integer.parseInt(A5.getText());
                v[5] = Integer.parseInt(A6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                AT.setText(vt + "");
                break;
            case 2:
                v[0] = Integer.parseInt(B1.getText());
                v[1] = Integer.parseInt(B2.getText());
                v[2] = Integer.parseInt(B3.getText());
                v[3] = Integer.parseInt(B4.getText());
                v[4] = Integer.parseInt(B5.getText());
                v[5] = Integer.parseInt(B6.getText());
                 
                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];
                av=vt/5;
                ad=350/Pe;
                System.out.println("av="+av+"ad="+ad);
                formula = (Pe / 350) * (vt / 5);
                System.out.println(formula);
                res = trunc(formula);
                System.out.println(res);
                if (res == 0) {
                    BT.setText("0");
                } else {
                    BT.setText(res + "");
                    puntuacion();
                }

                break;

            case 3:
                v[0] = Integer.parseInt(C1.getText());
                v[1] = Integer.parseInt(C2.getText());
                v[2] = Integer.parseInt(C3.getText());
                v[3] = Integer.parseInt(C4.getText());
                v[4] = Integer.parseInt(C5.getText());
                v[5] = Integer.parseInt(C6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                formula = (Pe / 350) * (vt / 10);
                res = trunc(formula);
                if (res == 0) {
                    CT.setText("0");
                } else {
                    CT.setText(res + "");
                    puntuacion();
                }
                break;
            case 4:
                v[0] = Integer.parseInt(D1.getText());
                v[1] = Integer.parseInt(D2.getText());
                v[2] = Integer.parseInt(D3.getText());
                v[3] = Integer.parseInt(D4.getText());
                v[4] = Integer.parseInt(D5.getText());
                v[5] = Integer.parseInt(D6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                formula = (Pe / 350) * (vt / 1);
                res = trunc(formula);
                if (res == 0) {
                    DT.setText("0");
                } else {
                    DT.setText(res + "");
                    puntuacion();
                }
                break;
            case 5:
                v[0] = Integer.parseInt(E1.getText());
                v[1] = Integer.parseInt(E2.getText());
                v[2] = Integer.parseInt(E3.getText());
                v[3] = Integer.parseInt(E4.getText());
                v[4] = Integer.parseInt(E5.getText());
                v[5] = Integer.parseInt(E6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                formula = (Pe / 350) * (vt / 3);
                res = trunc(formula);
                if (res == 0) {
                    ET.setText("0");
                } else {
                    ET.setText(res + "");
                    puntuacion();
                }
                break;
            case 6:
                v[0] = Integer.parseInt(F1.getText());
                v[1] = Integer.parseInt(F2.getText());
                v[2] = Integer.parseInt(F3.getText());
                v[3] = Integer.parseInt(F4.getText());
                v[4] = Integer.parseInt(F5.getText());
                v[5] = Integer.parseInt(F6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                formula = (Pe / 350) * (vt / 1);
                res = trunc(formula);
                if (res == 0) {
                    FT.setText("0");
                } else if (tipo.equals("N")) {
                    FT.setText("0");
                } else {
                    FT.setText(res + "");
                    puntuacion();
                }
                break;
            case 7:
                v[0] = Integer.parseInt(G1.getText());
                v[1] = Integer.parseInt(G2.getText());
                v[2] = Integer.parseInt(G3.getText());
                v[3] = Integer.parseInt(G4.getText());
                v[4] = Integer.parseInt(G5.getText());
                v[5] = Integer.parseInt(G6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                formula = (Pe / 350) * (vt / 3);
                res = trunc(formula);
                if (res == 0) {
                    GT.setText("0");
                } else {
                    GT.setText(res + "");
                    puntuacion();
                }
                break;
            case 8:
                v[0] = Integer.parseInt(H1.getText());
                v[1] = Integer.parseInt(H2.getText());
                v[2] = Integer.parseInt(H3.getText());
                v[3] = Integer.parseInt(H4.getText());
                v[4] = Integer.parseInt(H5.getText());
                v[5] = Integer.parseInt(H6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                formula = (Pe / 350) * (vt / 5);
                res = trunc(formula);
                if (res == 0) {
                    HT.setText("0");
                } else {
                    HT.setText(res + "");
                    puntuacion();
                }
                break;
            case 9:
                v[0] = Integer.parseInt(I1.getText());
                v[1] = Integer.parseInt(I2.getText());
                v[2] = Integer.parseInt(I3.getText());
                v[3] = Integer.parseInt(I4.getText());
                v[4] = Integer.parseInt(I5.getText());
                v[5] = Integer.parseInt(I6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                formula = (Pe / 350) * (vt / 5);
                res = trunc(formula);
                if (res == 0) {
                    IT.setText("0");
                } else {
                    IT.setText(res + "");
                    puntuacion();
                }
                break;
            case 10:
                v[0] = Integer.parseInt(J1.getText());
                v[1] = Integer.parseInt(J2.getText());
                v[2] = Integer.parseInt(J3.getText());
                v[3] = Integer.parseInt(J4.getText());
                v[4] = Integer.parseInt(J5.getText());
                v[5] = Integer.parseInt(J6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];
                formula = (Pe / 350) * (vt / 3);
                res = trunc(formula);
                if (res == 0) {
                    JT.setText("0");
                } else {
                    JT.setText(res + "");
                    puntuacion();
                }
                break;
            case 11:
                v[0] = Integer.parseInt(K1.getText());
                v[1] = Integer.parseInt(K2.getText());
                v[2] = Integer.parseInt(K3.getText());
                v[3] = Integer.parseInt(K4.getText());
                v[4] = Integer.parseInt(K5.getText());
                v[5] = Integer.parseInt(K6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                formula = (Pe / 350) * (vt / 5);
                res = trunc(formula);
                if (res == 0) {
                    KT.setText("0");
                } else {
                    KT.setText(res + "");
                    puntuacion();
                }
                break;
            case 12:
                v[0] = Integer.parseInt(L1.getText());
                v[1] = Integer.parseInt(L2.getText());
                v[2] = Integer.parseInt(L3.getText());
                v[3] = Integer.parseInt(L4.getText());
                v[4] = Integer.parseInt(L5.getText());
                v[5] = Integer.parseInt(L6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                formula = (Pe / 350) * (vt / 5);
                res = trunc(formula);
                if (res == 0) {
                    LT.setText("0");
                } else {
                    LT.setText("0");
                    puntuacion();
                }
                break;
            case 13:
                v[0] = Integer.parseInt(M1.getText());
                v[1] = Integer.parseInt(M2.getText());
                v[2] = Integer.parseInt(M3.getText());
                v[3] = Integer.parseInt(M4.getText());
                v[4] = Integer.parseInt(M5.getText());
                v[5] = Integer.parseInt(M6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                formula = (Pe / 350) * (vt / 5);
                res = trunc(formula);
                if (res == 0) {
                    MT.setText("0");
                } else {
                    MT.setText(res + "");
                    puntuacion();
                }
                break;
            case 14:
                v[0] = Integer.parseInt(N1.getText());
                v[1] = Integer.parseInt(N2.getText());
                v[2] = Integer.parseInt(N3.getText());
                v[3] = Integer.parseInt(N4.getText());
                v[4] = Integer.parseInt(N5.getText());
                v[5] = Integer.parseInt(N6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                formula = (Pe / 350) * (vt / 5);
                res = trunc(formula);
                if (res == 0) {
                    NT.setText("0");
                } else {
                    NT.setText("0");
                    puntuacion();
                }
                break;
            case 15:
                v[0] = Integer.parseInt(O1.getText());
                v[1] = Integer.parseInt(O2.getText());
                v[2] = Integer.parseInt(O3.getText());
                v[3] = Integer.parseInt(O4.getText());
                v[4] = Integer.parseInt(O5.getText());
                v[5] = Integer.parseInt(O6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];
                formula = (Pe / 350) * (vt / 1);
                res = trunc(formula);
                if (res == 0) {
                    OT.setText("0");
                } else {
                    OT.setText(res + "");
                    puntuacion();
                }
                break;
            case 16:
                v[0] = Integer.parseInt(P1.getText());
                v[1] = Integer.parseInt(P2.getText());
                v[2] = Integer.parseInt(P3.getText());
                v[3] = Integer.parseInt(P4.getText());
                v[4] = Integer.parseInt(P5.getText());
                v[5] = Integer.parseInt(P6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];
                formula = (Pe / 350) * (vt / 5);
                res = trunc(formula);
                if (res == 0) {
                    PT.setText("0");
                } else {
                    PT.setText(res + "");
                    puntuacion();
                }
                break;
            case 17:
                v[0] = Integer.parseInt(Q1.getText());
                v[1] = Integer.parseInt(Q2.getText());
                v[2] = Integer.parseInt(Q3.getText());
                v[3] = Integer.parseInt(Q4.getText());
                v[4] = Integer.parseInt(Q5.getText());
                v[5] = Integer.parseInt(Q6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];
                formula = (Pe / 350) * (vt / 5);
                res = trunc(formula);
                if (res == 0) {
                    QT.setText("0");
                } else {
                    QT.setText(res + "");
                    puntuacion();
                }
                break;
            case 18:
                v[0] = Integer.parseInt(R1.getText());
                v[1] = Integer.parseInt(R2.getText());
                v[2] = Integer.parseInt(R3.getText());
                v[3] = Integer.parseInt(R4.getText());
                v[4] = Integer.parseInt(R5.getText());
                v[5] = Integer.parseInt(R6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];
                formula = (Pe / 350) * (vt / 5);
                res = trunc(formula);
                if (res == 0) {
                    RT.setText("0");
                } else {
                    RT.setText(res + "");
                    puntuacion();
                }
                break;
            case 19:
                v[0] = Integer.parseInt(S1.getText());
                v[1] = Integer.parseInt(S2.getText());
                v[2] = Integer.parseInt(S3.getText());
                v[3] = Integer.parseInt(S4.getText());
                v[4] = Integer.parseInt(S5.getText());
                v[5] = Integer.parseInt(S6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];
                formula = (Pe / 350) * (vt / 5);
                res = trunc(formula);
                if (res == 0) {
                    ST.setText("0");
                } else {
                    ST.setText(res + "");
                    puntuacion();
                }
                break;
            case 20:
                v[0] = Integer.parseInt(T1.getText());
                v[1] = Integer.parseInt(T2.getText());
                v[2] = Integer.parseInt(T3.getText());
                v[3] = Integer.parseInt(T4.getText());
                v[4] = Integer.parseInt(T5.getText());
                v[5] = Integer.parseInt(T6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                formula = (Pe / 350) * (vt / 5);
                res = trunc(formula);
                if (res == 0) {
                    TT.setText("0");
                } else {
                    TT.setText("0");
                    puntuacion();
                }
                break;
            case 21:
                v[0] = Integer.parseInt(U1.getText());
                v[1] = Integer.parseInt(U2.getText());
                v[2] = Integer.parseInt(U3.getText());
                v[3] = Integer.parseInt(U4.getText());
                v[4] = Integer.parseInt(U5.getText());
                v[5] = Integer.parseInt(U6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                formula = (Pe / 350) * (vt / 5);
                res = trunc(formula);
                if (res == 0) {
                    UT.setText("0");
                } else {
                    UT.setText(res + "");
                    puntuacion();
                }
                break;
            case 22:
                v[0] = Integer.parseInt(V1.getText());
                v[1] = Integer.parseInt(V2.getText());
                v[2] = Integer.parseInt(V3.getText());
                v[3] = Integer.parseInt(V4.getText());
                v[4] = Integer.parseInt(V5.getText());
                v[5] = Integer.parseInt(V6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                formula = (Pe / 350) * (vt / 5);
                res = trunc(formula);
                if (res == 0) {
                    VT.setText("0");
                } else {
                    VT.setText(res + "");
                    puntuacion();
                }
                break;
            case 23:
                v[0] = Integer.parseInt(W1.getText());
                v[1] = Integer.parseInt(W2.getText());
                v[2] = Integer.parseInt(W3.getText());
                v[3] = Integer.parseInt(W4.getText());
                v[4] = Integer.parseInt(W5.getText());
                v[5] = Integer.parseInt(W6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                formula = (Pe / 350) * (vt / 5);
                res = trunc(formula);
                if (res == 0) {
                    WT.setText("0");
                } else {
                    WT.setText(res + "");
                    puntuacion();
                }
                break;
            case 24:
                v[0] = Integer.parseInt(X1.getText());
                v[1] = Integer.parseInt(X2.getText());
                v[2] = Integer.parseInt(X3.getText());
                v[3] = Integer.parseInt(X4.getText());
                v[4] = Integer.parseInt(X5.getText());
                v[5] = Integer.parseInt(X6.getText());

                vt = v[0] + v[1] + v[2] + v[3] + v[4] + v[5];

                formula = (Pe / 350) * (vt / 1);
                res = trunc(formula);
                if (res == 0) {
                    XT.setText("0");
                } else {
                    XT.setText(res + "");
                    puntuacion();
                }
                break;
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdEvaluacionA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdEvaluacionA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdEvaluacionA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdEvaluacionA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
 /*  java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               jdEvaluacionA dialog = new jdEvaluacionA(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        //</editor-fold>

        /* Create and display the dialog */
 /*  java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               jdEvaluacionA dialog = new jdEvaluacionA(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField A1;
    private javax.swing.JTextField A2;
    private javax.swing.JTextField A3;
    private javax.swing.JTextField A4;
    private javax.swing.JTextField A5;
    private javax.swing.JTextField A6;
    private javax.swing.JTextField AT;
    private javax.swing.JTextField B1;
    private javax.swing.JTextField B2;
    private javax.swing.JTextField B3;
    private javax.swing.JTextField B4;
    private javax.swing.JTextField B5;
    private javax.swing.JTextField B6;
    private javax.swing.JTextField BT;
    private javax.swing.JTextField C1;
    private javax.swing.JTextField C2;
    private javax.swing.JTextField C3;
    private javax.swing.JTextField C4;
    private javax.swing.JTextField C5;
    private javax.swing.JTextField C6;
    private javax.swing.JTextField CT;
    private javax.swing.JTextField Comunidad;
    private javax.swing.JTextField Csm;
    private javax.swing.JTextField D1;
    private javax.swing.JTextField D2;
    private javax.swing.JTextField D3;
    private javax.swing.JTextField D4;
    private javax.swing.JTextField D5;
    private javax.swing.JTextField D6;
    private javax.swing.JTextField DT;
    private javax.swing.JTextField Doro;
    private javax.swing.JTextField E1;
    private javax.swing.JTextField E2;
    private javax.swing.JTextField E3;
    private javax.swing.JTextField E4;
    private javax.swing.JTextField E5;
    private javax.swing.JTextField E6;
    private javax.swing.JTextField ET;
    private javax.swing.JTextField F1;
    private javax.swing.JTextField F2;
    private javax.swing.JTextField F3;
    private javax.swing.JTextField F4;
    private javax.swing.JTextField F5;
    private javax.swing.JTextField F6;
    private javax.swing.JTextField FT;
    private javax.swing.JTextField Forma;
    private javax.swing.JTextField G1;
    private javax.swing.JTextField G2;
    private javax.swing.JTextField G3;
    private javax.swing.JTextField G4;
    private javax.swing.JTextField G5;
    private javax.swing.JTextField G6;
    private javax.swing.JTextField GT;
    private javax.swing.JButton Guardar;
    private javax.swing.JTextField H1;
    private javax.swing.JTextField H2;
    private javax.swing.JTextField H3;
    private javax.swing.JTextField H4;
    private javax.swing.JTextField H5;
    private javax.swing.JTextField H6;
    private javax.swing.JTextField HT;
    private javax.swing.JTextField I1;
    private javax.swing.JTextField I2;
    private javax.swing.JTextField I3;
    private javax.swing.JTextField I4;
    private javax.swing.JTextField I5;
    private javax.swing.JTextField I6;
    private javax.swing.JTextField IT;
    private javax.swing.JTextField J1;
    private javax.swing.JTextField J2;
    private javax.swing.JTextField J3;
    private javax.swing.JTextField J4;
    private javax.swing.JTextField J5;
    private javax.swing.JTextField J6;
    private javax.swing.JTextField JT;
    private javax.swing.JTextField K1;
    private javax.swing.JTextField K2;
    private javax.swing.JTextField K3;
    private javax.swing.JTextField K4;
    private javax.swing.JTextField K5;
    private javax.swing.JTextField K6;
    private javax.swing.JTextField KT;
    private javax.swing.JTextField L1;
    private javax.swing.JTextField L2;
    private javax.swing.JTextField L3;
    private javax.swing.JTextField L4;
    private javax.swing.JTextField L5;
    private javax.swing.JTextField L6;
    private javax.swing.JTextField LT;
    private javax.swing.JTextField M1;
    private javax.swing.JTextField M2;
    private javax.swing.JTextField M3;
    private javax.swing.JTextField M4;
    private javax.swing.JTextField M5;
    private javax.swing.JTextField M6;
    private javax.swing.JTextField MT;
    private javax.swing.JTextField N1;
    private javax.swing.JTextField N2;
    private javax.swing.JTextField N3;
    private javax.swing.JTextField N4;
    private javax.swing.JTextField N5;
    private javax.swing.JTextField N6;
    private javax.swing.JTextField NT;
    private javax.swing.JTextField O1;
    private javax.swing.JTextField O2;
    private javax.swing.JTextField O3;
    private javax.swing.JTextField O4;
    private javax.swing.JTextField O5;
    private javax.swing.JTextField O6;
    private javax.swing.JTextField OT;
    private javax.swing.JTextField P1;
    private javax.swing.JTextField P2;
    private javax.swing.JTextField P3;
    private javax.swing.JTextField P4;
    private javax.swing.JTextField P5;
    private javax.swing.JTextField P6;
    private javax.swing.JTextField PT;
    private javax.swing.JTextField PesoEv;
    private javax.swing.JTextField Q1;
    private javax.swing.JTextField Q2;
    private javax.swing.JTextField Q3;
    private javax.swing.JTextField Q4;
    private javax.swing.JTextField Q5;
    private javax.swing.JTextField Q6;
    private javax.swing.JTextField QT;
    private javax.swing.JTextField R1;
    private javax.swing.JTextField R2;
    private javax.swing.JTextField R3;
    private javax.swing.JTextField R4;
    private javax.swing.JTextField R5;
    private javax.swing.JTextField R6;
    private javax.swing.JTextField RT;
    private javax.swing.JTextField S1;
    private javax.swing.JTextField S2;
    private javax.swing.JTextField S3;
    private javax.swing.JTextField S4;
    private javax.swing.JTextField S5;
    private javax.swing.JTextField S6;
    private javax.swing.JTextField ST;
    private javax.swing.JTextField T1;
    private javax.swing.JTextField T2;
    private javax.swing.JTextField T3;
    private javax.swing.JTextField T4;
    private javax.swing.JTextField T5;
    private javax.swing.JTextField T6;
    private javax.swing.JTextField TT;
    private javax.swing.JTextField Tipo;
    private javax.swing.JTextField U1;
    private javax.swing.JTextField U2;
    private javax.swing.JTextField U3;
    private javax.swing.JTextField U4;
    private javax.swing.JTextField U5;
    private javax.swing.JTextField U6;
    private javax.swing.JTextField UT;
    private javax.swing.JTextField V1;
    private javax.swing.JTextField V2;
    private javax.swing.JTextField V3;
    private javax.swing.JTextField V4;
    private javax.swing.JTextField V5;
    private javax.swing.JTextField V6;
    private javax.swing.JTextField VT;
    private javax.swing.JTextField W1;
    private javax.swing.JTextField W2;
    private javax.swing.JTextField W3;
    private javax.swing.JTextField W4;
    private javax.swing.JTextField W5;
    private javax.swing.JTextField W6;
    private javax.swing.JTextField WT;
    private javax.swing.JTextField X1;
    private javax.swing.JTextField X2;
    private javax.swing.JTextField X3;
    private javax.swing.JTextField X4;
    private javax.swing.JTextField X5;
    private javax.swing.JTextField X6;
    private javax.swing.JTextField XT;
    private javax.swing.JTextField calcere;
    private com.toedter.calendar.JDateChooser calendario;
    private javax.swing.JSpinner color;
    private javax.swing.JComboBox<String> evaluador;
    private javax.swing.JTextField humedadc;
    private javax.swing.JTextField humedado;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField puntuacion;
    private javax.swing.JSpinner uniformidad;
    // End of variables declaration//GEN-END:variables
}
